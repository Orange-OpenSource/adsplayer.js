{"version":3,"sources":["webpack://adsplayer/webpack/universalModuleDefinition","webpack://adsplayer/webpack/bootstrap","webpack://adsplayer/./src/lib/Logger.ts","webpack://adsplayer/./src/lib/EventBus.ts","webpack://adsplayer/./src/Events.ts","webpack://adsplayer/./src/lib/utils/utils.ts","webpack://adsplayer/./src/Errors.ts","webpack://adsplayer/./src/lib/utils/xmldom.ts","webpack://adsplayer/./src/lib/mast/model/Mast.ts","webpack://adsplayer/./src/lib/media/ImagePlayer.ts","webpack://adsplayer/./src/lib/media/VideoPlayer.ts","webpack://adsplayer/./src/lib/vast/TrackingEventsManager.ts","webpack://adsplayer/./src/lib/vast/CreativePlayer.ts","webpack://adsplayer/./src/lib/vast/AdPlayer.ts","webpack://adsplayer/./src/lib/vast/VastPlayerManager.ts","webpack://adsplayer/./src/lib/vast/model/Vast.ts","webpack://adsplayer/./src/lib/vast/VastParser.ts","webpack://adsplayer/./src/lib/mast/TriggerManager.ts","webpack://adsplayer/./src/lib/mast/MastParser.ts","webpack://adsplayer/./src/lib/ErrorHandler.ts","webpack://adsplayer/./src/lib/FileLoader.ts","webpack://adsplayer/./src/lib/AdsPlayerController.ts","webpack://adsplayer/./src/AdsPlayer.ts","webpack://adsplayer/./index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LOG_LEVEL","Date","HHMMSSmmm","h","this","getHours","toString","getMinutes","getSeconds","ms","getMilliseconds","MMSSmmm","Logger","level","ALL","showTimestamp","showElapsedTime","startTime","logger","console","getInstance","instance","getLevel","setLevel","error","args","_i","arguments","length","log","ERROR","warn","WARN","info","INFO","debug","DEBUG","getStringLevel","NONE","prepareLog","logLevel","message","logTime","showLevel","getTime","Array","apply","forEach","item","Logger_1","AdEvents","EventBus","registrations","addEventListener","type","listener","listeners","getListeners","indexOf","push","removeEventListener","idx","splice","dispatchEvent","data","slice","event","EventTypes","Utils","isAbsoluteURI","uri","toLowerCase","ErrorCodes","ErrorMessages","DOWNLOAD_ERR_FILE","DOWNLOAD_ERR_NOT_XML","XmlDom","getElementsByTagName","node","elements","child","firstElementChild","firstChild","namespaceURI","getElementsByTagNameNS","getElement","getElements","getSubElements","subName","element","getChildNode","childNodes","nodeName","getNodeTextValue","cdataSection","textSection","nodeValue","getChildNodeTextValue","Mast","baseUrl","triggers","Trigger","id","description","startConditions","endConditions","sources","alreadyProcessed","vasts","activated","Condition","operator","conditions","CONDITION_TYPE","CONDITION_NAME","CONDITION_OPERATOR","Source","altReference","format","SOURCE_FORMAT","utils_1","ImagePlayer","image","duration","currentTime","ended","timerInterval","timerTime","events","load","mediaFiles","mediaFile","document","getElementById","createElement","setAttribute","getType","addEventListener_","removeEventListener_","setDuration","getDuration","getCurrentTime","setVolume","volume","getVolume","play","startTimer","pause","stopTimer","stop","reset","isEnded","notifyEvent","updateCurrentTime","time","setInterval","clearInterval","default","VideoPlayer","video","autoplay","isMediaSupported","sort","a","b","bitrate","e","src","muted","removeAttribute","mimeType","HTMLMediaElement","canPlay","canPlayType","TrackingEventsManager","trackingEvents","adMediaPlayer","mute","unmute","eventListeners","init","start","addPlayerEventListeners","removePlayerEventListeners","postEvent","xhr","XMLHttpRequest","open","setRequestHeader","send","eventType","trackingEvent","self","_eventListener","completed","undefined","condition","oneShot","_this","this_1","res","state","offsetPercent","offsetInSeconds","TrackingEventsManager_1","VideoPlayer_1","ImagePlayer_1","EventBus_1","Events_1","CreativePlayer","adPlayerContainer","mediaPlayer","trackingEventsManager","mainVideo","eventBus","onMediaPlayListener","onMediaPlay","onMediaPauseListener","onMediaPause","onMediaErrorListener","onMediaError","onMediaTimeupdateListener","onMediaTimeupdate","onMediaEndedListener","onMediaEnded","creative","play_","pause_","stop_","parseTime","str","timeParts","split","parseInt","parseFloat","PLAY","PAUSE","CREATIVE_END","onMainVideoVolumeChange","onAdClick","videoClicks","clickThrough","CLICK","isVideo","isImage","CREATIVE_START","ADD_ELEMENT","appendChild","style","cursor","REMOVE_ELEMENT","removeChild","CreativePlayer_1","AdPlayer","ad","creativeIndex","creativePlayer","onCreativeEndListener","onCreativeEnd","AD_START","sendImpressions","inLine","impressions","playCreative","resumeCreative","pauseCreative","stopCreative","impression","http","playNextCreative","index","linear","creatives","AD_END","AdPlayer_1","VastPlayerManager","vastIndex","adIndex","adPlayer","onAdEndListener","onAdEnd","TRIGGER_START","playVast","resumeAd","pauseAd","stopAd","playNextAd","playAd","vast","ads","playNextVast","TRIGGER_END","Vast","version","Ad","sequence","wrapper","InLine","adSystem","adTitle","survey","extensions","Impression","Extensions","other","Creative","adId","CompanionAds","nonLinearAds","CREATIVE_TYPE","Linear","adParameters","Companion","width","height","staticResource","iFrameResource","hTMLResource","altText","NonLinear","expandedWidth","expandedHeight","scalable","maintainAspectRatio","apiFramework","TrackingEvent","TRACKINGEVENT_TYPE","VideoClicks","clickTracking","customClick","MediaFile","delivery","MEIAFILE_DELIVERY","StaticResource","uRI","creativeType","xmldom_1","VastParser","parse","xmlDom","vast_","vastNode","getAttribute","getAds","getTrackingEvent","trackingNode","offsetValue","substring","getVideoClicks","videoClicksNode","getMediaFile","mediaFileNode","getLinear","linearNode","trackingNodes","mediaFileNodes","getCreative","creativeNode","getInLine","adNode","impressionNodes","creativeNodes","inLineNode","getAd","adNodes","mast","TriggerManager","trigger","getTrigger","checkStartConditions","evaluateConditions","checkEndConditions","compareValues","value1","value2","EQ","NEQ","GTR","GEQ","LT","LEQ","MOD","evaluateCondition","EVENT","ON_ITEM_START","PROPERTY","POSITION","DURATION","ON_ITEM_END","MastParser","_mast","mastNode","getTriggers","getCondition","conditionNode","conditionNodes","getSource","sourceNode","sourceNodes","source","triggerNode","startConditionNodes","endConditionNodes","triggerNodes","Errors_1","ErrorHandler","sendError","code","JSON","stringify","FileLoader","request","url","aborted","needFailureReport","Promise","resolve","reject","load_","abort","abort_","parseBaseUrl","base","lastIndexOf","parseXml","DOMParser","xmlDoc","parseFromString","Error","onload","evt","onLoad","onloadend","onLoadend","onerror","onabort","onAbort","timeout","status","readyState","responseXML","responseText","responseURL","dom","FileLoader_1","ErrorHandler_1","MastParser_1","TriggerManager_1","VastParser_1","VastPlayerManager_1","AdsPlayerController","adsPlayerContainer","fileLoaders","triggerManagers","vastPlayerManager","mastParser","vastParser","errorHandler","handleMainPlayerPlayback","onVideoPlayingListener","onVideoPlaying","onVideoTimeupdateListener","onVideoTimeupdate","onVideoEndedListener","onVideoEnded","onTriggerEndListener","onTriggerEnd","fileLoader","then","result","parseMastFile","catch","destroy","loadVast","loadTriggerVasts","loadVastPromises","all","mastContent","mastBaseUrl","triggerManager","checkTriggersStart","activateTrigger","checkTriggersEnd","pauseVideo","paused","resumeVideo","END","playTrigger","firstTrigger","START","AdsPlayerController_1","AdsPlayer","adsPlayerController","onErrorListener","onError","getName","stream","getVersion","getVersionFull","getBuildDate","getError","enableLogs","enable","AdsPlayer_1"],"mappings":"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","file":"adsplayer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"adsplayer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adsplayer\"] = factory();\n\telse\n\t\troot[\"adsplayer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* Date prorotype extension\r\n*/\r\ndeclare global {\r\n    interface Date {\r\n        HHMMSSmmm(): string;\r\n        MMSSmmm(): string;\r\n    }\r\n  }\r\n  \r\nDate.prototype.HHMMSSmmm = function() {\r\n    let h = this.getHours().toString(),\r\n        m = this.getMinutes().toString(),\r\n        s = this.getSeconds().toString(),\r\n        ms = this.getMilliseconds().toString(),\r\n        HH = h[1] ? h : '0' + h[0],\r\n        MM = m[1] ? m : '0' + m[0],\r\n        SS = s[1] ? s : '0' + s[0],\r\n        mmm = ms[2] ? ms : '0' + (ms[1] ? ms : '0' + ms[0]);\r\n\r\n    return HH + ':' + MM + ':' + SS + '.' + mmm;\r\n};\r\n\r\nDate.prototype.MMSSmmm = function() {\r\n    let m = this.getMinutes().toString(),\r\n        s = this.getSeconds().toString(),\r\n        ms = this.getMilliseconds().toString(),\r\n        MM = m[1] ? m : '0' + m[0],\r\n        SS = s[1] ? s : '0' + s[0],\r\n        mmm = ms[2] ? ms : '0' + (ms[1] ? ms : '0' + ms[0]);\r\n\r\n    return MM + ':' + SS + '.' + mmm;\r\n};\r\n\r\n\r\nexport enum LOG_LEVEL {\r\n    NONE = 0,\r\n    ERROR = 1,\r\n    WARN = 2,\r\n    INFO = 3,\r\n    DEBUG = 4,\r\n    ALL = 4,\r\n}  \r\n\r\nexport class Logger {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private static instance: Logger = null;\r\n\r\n    level: LOG_LEVEL;\r\n    showTimestamp: boolean;\r\n    showElapsedTime: boolean;\r\n    startTime: Date;\r\n    logger: any;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    static getInstance() {\r\n        if (this.instance === null) {\r\n            this.instance = new Logger();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.level = LOG_LEVEL.ALL;\r\n        this.showTimestamp = true;\r\n        this.showElapsedTime = false;\r\n        this.startTime = new Date();\r\n        this.logger = console;\r\n    }\r\n\r\n    getLevel (): LOG_LEVEL {\r\n        return this.level;\r\n    }\r\n\r\n    setLevel (value: LOG_LEVEL) {\r\n        this.level = value;\r\n    }\r\n\r\n    error(...args: any[]) {\r\n        this.log(LOG_LEVEL.ERROR, args);\r\n    }\r\n\r\n    warn (...args: any[]) {\r\n        this.log(LOG_LEVEL.WARN, args);\r\n    }\r\n\r\n    info (...args: any[]) {\r\n        this.log(LOG_LEVEL.INFO, args);\r\n    }\r\n\r\n    debug (...args: any[]) {\r\n        this.log(LOG_LEVEL.DEBUG, args);\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    getStringLevel(level) {\r\n        switch (level) {\r\n            case LOG_LEVEL.NONE:\r\n                return '';\r\n            case LOG_LEVEL.ERROR:\r\n                return 'ERROR';\r\n            case LOG_LEVEL.WARN:\r\n                return 'WARN';\r\n            case LOG_LEVEL.INFO:\r\n                return 'INFO';\r\n            case LOG_LEVEL.DEBUG:\r\n            case LOG_LEVEL.ALL:\r\n                return 'DEBUG';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    prepareLog(logLevel, ...args: any[]) {\r\n        let message = '',\r\n            logTime = new Date();\r\n\r\n        if (this.showTimestamp) {\r\n            message += '[' + logTime.HHMMSSmmm() + ']';\r\n        }\r\n\r\n        if (this.logger && this.logger.showLevel) {\r\n            message += '[' + this.getStringLevel(logLevel) + ']';\r\n        }\r\n\r\n        if (this.showElapsedTime) {\r\n            message += '[' + new Date(logTime.getTime() - this.startTime.getTime()).MMSSmmm() + ']';\r\n        }\r\n\r\n        message += '[AdsPlayer] ';\r\n\r\n        Array.apply(null, args).forEach(function(item) {\r\n            message += item + ' ';\r\n        });\r\n\r\n        return message;\r\n    }\r\n\r\n    log (logLevel: LOG_LEVEL, ...args: any[]) {\r\n        if (logLevel > this.getLevel()) {\r\n            return;\r\n        }\r\n        let message = this.prepareLog(logLevel, args);\r\n        switch (logLevel) {\r\n            case LOG_LEVEL.ERROR:\r\n                this.logger.error(message);\r\n                break;\r\n            case LOG_LEVEL.WARN:\r\n                this.logger.warn(message);\r\n                break;\r\n            case LOG_LEVEL.INFO:\r\n                this.logger.info(message);\r\n                break;\r\n            case LOG_LEVEL.DEBUG:\r\n                this.logger.debug(message);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* Event bus utility class for events listening and notifying.\r\n*/\r\n\r\nimport { Logger } from './Logger';\r\nimport { EventTypes } from '../Events';\r\n\r\n\r\nexport enum AdEvents {\r\n    TRIGGER_START = 'triggerStart',\r\n    TRIGGER_END = 'triggerEnd',\r\n    AD_START = 'adStart',\r\n    AD_END = 'adEnd',\r\n    CREATIVE_START = 'creativeStart',\r\n    CREATIVE_END = 'creativeEnd',\r\n    PLAY = 'play',\r\n    PAUSE = 'pause',\r\n    CLICK = 'click'\r\n}\r\n\r\nexport class EventBus {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private static instance: EventBus = null;\r\n\r\n    private registrations: object;\r\n    private logger: Logger;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    static getInstance() {\r\n        if (this.instance === null) {\r\n            this.instance = new EventBus();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.registrations = {};\r\n        this.logger = Logger.getInstance();\r\n    }\r\n\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    public addEventListener (type: string, listener: any) {\r\n        let listeners = this.getListeners(type),\r\n            idx = listeners.indexOf(listener);\r\n\r\n        if (idx === -1) {\r\n            listeners.push(listener);\r\n        }\r\n    }\r\n\r\n    public removeEventListener (type: string, listener: any) {\r\n        let listeners = this.getListeners(type),\r\n            idx = listeners.indexOf(listener);\r\n\r\n        if (idx !== -1) {\r\n            listeners.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    public dispatchEvent (type: string, data?: object) {\r\n        let listeners = this.getListeners(type).slice(),\r\n            event = {\r\n                type: type,\r\n                data: data ? data : {}\r\n            }\r\n\r\n        this.logger.debug('# Event: ' + type);\r\n        for (let i = 0; i < listeners.length; i += 1) {\r\n            listeners[i].call(this, event);\r\n        }\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private getListeners (type: string) {\r\n        if (!(type in this.registrations)) {\r\n            this.registrations[type] = [];\r\n        }\r\n        return this.registrations[type];\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n}\r\n\r\n// export default EventBus;","\r\n/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nexport interface Event {\r\n    /** The event type */\r\n    type: EventTypes,\r\n\r\n    /** The event data. Refer to each event type ({@link EventTypes}) to get the data object properties description */\r\n    data?: object\r\n}\r\n\r\nexport enum EventTypes {\r\n    \r\n    /**\r\n     * The 'start' event is fired when the playback of ad(s) is starting.\r\n     * When the 'start' event is fired, the application shall hide the main player component and\r\n     * display the ads player container in which the ad media player component(s) will be created\r\n     * and displayed.\r\n     * <br/>Event data properties:\r\n     * @event START\r\n     * @property <b>currentTime</b>: number - the main video element current time\r\n     * @property <b>ended</b>: boolean - the main video element ended state (true in case of end-roll ad)\r\n     */\r\n    START = 'start',\r\n\r\n    /**\r\n     * The 'end' event is fired when the playback of ad(s) has ended.\r\n     * When the 'end' event is fired, the application shall display the main player component and\r\n     * hide the ads player container.\r\n     * @event END\r\n     */\r\n    END = 'end',\r\n\r\n    /**\r\n     * The 'addElement' event is fired when a DOM element for playing an ad has been created\r\n     * and appended in the ads player container.\r\n     * The element can be either a &lt;video&gt; or an &lt;img&gt; element.\r\n     * <br/>Event data properties:\r\n     * @event ADD_ELEMENT\r\n     * @property <b>element</b>: HTMLElement - the created element\r\n     * @property <b>type</b>: string - the type of the element, 'video' for &lt;video&gt; or 'image' for &lt;img&gt;\r\n     */\r\n    ADD_ELEMENT = 'addElement',\r\n\r\n    /**\r\n     * The 'removeElement' event is fired when the DOM element for playing an ad is being removed\r\n     * from the ads player container and deleted.\r\n     * <br/>Event data properties:\r\n     * @event REMOVE_ELEMENT\r\n     * @property <b>element</b>: HTMLElement - the removed element\r\n     * @property <b>type</b>: string - the type of the element, 'video' for &lt;video&gt; or 'image' for &lt;img&gt;\r\n     */\r\n    REMOVE_ELEMENT = 'removeElement',\r\n\r\n    /**\r\n     * The 'play' event is fired when the playback of media ad is starting.\r\n     * @event PLAY\r\n     */\r\n    PLAY = 'play',\r\n\r\n    /**\r\n     * The 'pause' event is fired when the playback of an ad is paused.\r\n     * @event PAUSE\r\n     */\r\n    PAUSE = 'pause',\r\n\r\n    /**\r\n     * The 'click' event is fired when a click has been performed on the ad component.\r\n     * When the 'click' event is fired, the application shall open the web page with the provided URI.\r\n     * <br/>Event data properties:\r\n     * @event CLICK\r\n     * @property <b>uri</b>: string - the web page uri\r\n     */\r\n    CLICK = 'click',\r\n\r\n    /**\r\n     * The error event is fired when an error occurs.\r\n     * <br/>Event data properties:\r\n     * @event ERROR\r\n     * @property <b>code</b>: number - the error code\r\n     * @property <b>message</b>: string - the error message\r\n     * @property <b>data</b>: object -  error additionnal data\r\n     */\r\n    ERROR = 'error'\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nexport class Utils {\r\n    static isAbsoluteURI = function (uri: string): boolean {\r\n        return ((uri.toLowerCase().indexOf('http://') >= 0) || (uri.toLowerCase().indexOf('https://') >= 0));\r\n    }\r\n}","export enum ErrorCodes {\r\n\r\n    /**\r\n     * An error occured when downloading a MAST or VAST file\r\n     * Error data properties:\r\n     * @property <b>url</b>: string - the MAST or VAST file url\r\n     * @property <b>status</b>: number - the response status code\r\n     */\r\n    DOWNLOAD_ERR_FILE = 1,\r\n\r\n    /**\r\n     * The downloaded MAST or VAST file is not in XML format \r\n     * Error data properties:\r\n     * @property <b>url</b>: string - the MAST or VAST file url\r\n     */\r\n    DOWNLOAD_ERR_NOT_XML = 2,\r\n\r\n    // NO_VALID_MEDIA_FOUND = 3,\r\n    // LOAD_MEDIA_FAILED = 4,\r\n    // UNSUPPORTED_MEDIA_FILE = 5,\r\n    // UNAVAILABLE_LINK = 6\r\n}\r\n\r\nexport interface Error {\r\n    /** The error code */\r\n    code: ErrorCodes,\r\n\r\n    /** The error message */\r\n    message: string,\r\n\r\n    /** The error data. Refer to each code to get the data object properties description */\r\n    data?: object\r\n}\r\n\r\nexport const ErrorMessages = {}\r\nErrorMessages[ErrorCodes.DOWNLOAD_ERR_FILE] = 'Failed to download file';\r\nErrorMessages[ErrorCodes.DOWNLOAD_ERR_NOT_XML] = 'The downloaded file format is not in xml format';\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nexport class XmlDom {\r\n    static getElementsByTagName = function(node: XMLDocument, name) {\r\n        let elements = node.getElementsByTagName(name);\r\n        if (elements.length > 0) {\r\n            return elements;\r\n        }\r\n        let child = node.firstElementChild || node.firstChild;\r\n        if (child) {\r\n            let namespaceURI = child.namespaceURI;\r\n            return node.getElementsByTagNameNS(namespaceURI, name);\r\n        }\r\n    }\r\n\r\n    static getElement = function(node, name) {\r\n        let elements = this.getElementsByTagName(node, name);\r\n        if (elements.length < 1) {\r\n            return null;\r\n        }\r\n        return elements[0];\r\n    }\r\n\r\n    static getElements = function(node, name) {\r\n        return this.getElementsByTagName(node, name);\r\n    }\r\n\r\n    static getSubElements = function(node, name, subName) {\r\n        let element = this.getElement(node, name);\r\n        if (element === null) {\r\n            return [];\r\n        }\r\n        return this.getElements(element, subName);\r\n    }\r\n\r\n    static getChildNode = function (node, name) {\r\n        if (!node || !node.childNodes) {\r\n            return null;\r\n        }\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n            if (node.childNodes[i].nodeName === name) {\r\n                return node.childNodes[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getNodeTextValue = function (node) {\r\n        let cdataSection = this.getChildNode(node, '#cdata-section'),\r\n            textSection = this.getChildNode(node, '#text');\r\n        if (cdataSection) {\r\n            return cdataSection.nodeValue;\r\n        } else if (textSection) {\r\n            return textSection.nodeValue;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    static getChildNodeTextValue = function (node, name) {\r\n        let element = this.getElement(node, name);\r\n        if (element === null) {\r\n            return '';\r\n        }\r\n        return this.getNodeTextValue(element);\r\n    }\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport { Vast } from '../../vast/model/Vast';\r\n\r\n/**\r\n* @export class Mast\r\n* @ignore\r\n*/\r\nexport class Mast {\r\n    baseUrl: string = ''; // pointer to any number of Ad objects\r\n    triggers: Trigger[] = [];\r\n    constructor () {\r\n    }\r\n}\r\n\r\n/**\r\n* @export class Trigger\r\n* @ignore\r\n*/\r\nexport class Trigger {\r\n    id:string = '';\r\n    description: number = 0;\r\n    startConditions: Condition[] = [];      // pointer to a list of start conditions to  : AdsPlayer.mast.model.Trigger.Condition\r\n    endConditions: Condition[] = [];        // pointer to a list of end conditions : AdsPlayer.mast.model.Trigger.Condition\r\n    sources: Source[] = [];              // pointer to a list of sources : AdsPlayer.mast.model.Trigger.Source\r\n    alreadyProcessed: boolean = false;  // mainly in the seeked case : do not replay trigger already played\r\n    vasts: Vast[] = [];\r\n    activated: boolean = false;\r\n    constructor () {\r\n    }\r\n}\r\n\r\n/**\r\n* @export class Condition\r\n* @ignore\r\n*/\r\nexport class Condition {\r\n    type: string = '';\r\n    name: string = '';\r\n    value: string = '';\r\n    operator: string = '';\r\n    conditions: Condition[] = [];\r\nconstructor () {\r\n    }\r\n}\r\n\r\n// ConditionType\r\nexport enum CONDITION_TYPE {\r\n    EVENT = 'event',\r\n    PROPERTY = 'property'\r\n\r\n};\r\n\r\n// ConditionName\r\nexport enum CONDITION_NAME {\r\n    ON_ITEM_START = 'OnItemStart',\r\n    ON_ITEM_END = 'OnItemEnd',\r\n    POSITION = 'Position',\r\n    DURATION = 'Duration'\r\n};\r\n\r\n// ConditionOperator\r\nexport enum CONDITION_OPERATOR {\r\n    EQ = 'EQ',  // equal\r\n    NEQ = 'NEQ', // not equal\r\n    GTR = 'GTR', // greater\r\n    GEQ = 'GEQ', // greater or equal\r\n    LT = 'LT',  // lower\r\n    LEQ = 'LEQ', // lower or equal\r\n    MOD = 'MOD'  // modulo\r\n};\r\n\r\n/**\r\n* @export class Source\r\n* @ignore\r\n*/\r\nexport class Source {\r\n    uri: string = '';\r\n    altReference: string = '';\r\n    format: string = '';\r\n    sources: any[] = [];\r\n    // targets = [];\r\n    constructor () {\r\n    }\r\n}\r\n\r\n// SourceFormat\r\nexport enum SOURCE_FORMAT {\r\n    VAST = 'vast',\r\n    UIF = 'uif'\r\n};\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The ImagePlayer is a MediaPlayer implementation for playing still images.\r\n*/\r\n\r\nimport * as vast from '../vast/model/Vast'\r\nimport { MediaPlayer } from './MediaPlayer'\r\nimport { Logger } from '../Logger';\r\nimport { Utils } from '../utils/utils';\r\n\r\n\r\nexport class ImagePlayer implements MediaPlayer {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private uri: string;\r\n    private image: HTMLElement;\r\n    private duration: number;\r\n    private currentTime: number;\r\n    private ended: boolean;\r\n    private listeners = {};\r\n    private timerInterval;\r\n    private timerTime;\r\n    private events: string[];\r\n    private logger: Logger;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.uri = '';\r\n        this.image = null;\r\n        this.duration = 0;\r\n        this.currentTime = 0;\r\n        this.ended = false;\r\n        this.listeners = {};\r\n        this.timerInterval = null;\r\n        this.timerTime = -1;\r\n        this.events = ['play', 'pause', 'timeupdate', 'ended'];\r\n        this.logger = Logger.getInstance();\r\n    }\r\n\r\n    load (baseUrl: string, mediaFiles: vast.MediaFile[]) {\r\n\r\n        var mediaFile: vast.MediaFile = null;\r\n\r\n        // Load the first supported image format\r\n        // Support only jpeg, png and gif image formats\r\n        for (let i = 0; i < mediaFiles.length; i++) {\r\n            let type = mediaFiles[i].type;\r\n            if ((type === 'image/jpeg') || (type === 'image/jpg') || (type === 'image/png') || (type === 'image/gif')) {\r\n                mediaFile = mediaFiles[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (mediaFile === null) {\r\n            return false;\r\n        }\r\n\r\n        // Get adsplayer-image element if already declared in DOM\r\n        this.image = document.getElementById('adsplayer-image');\r\n\r\n        if (!this.image) {\r\n            // Create the image element\r\n            this.image = document.createElement('img');\r\n            this.image.id = 'adsplayer-image';\r\n        }\r\n\r\n        // Add base URL\r\n        this.uri = mediaFile.uri;\r\n        this.uri = Utils.isAbsoluteURI(this.uri) ? this.uri : (baseUrl + this.uri);\r\n\r\n        this.logger.debug('Load image media, uri = ' + this.uri);\r\n        this.image.setAttribute('src', this.uri);\r\n\r\n        // Reset current time\r\n        this.currentTime = 0;\r\n        this.ended = false;\r\n\r\n        return true;\r\n    }\r\n\r\n    getType () {\r\n        return 'image';\r\n    }\r\n\r\n    getElement () {\r\n        return this.image;\r\n    }\r\n\r\n    addEventListener (type: string, listener: any) {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        if (this.events.indexOf(type) !== -1) {\r\n            this.addEventListener_(type, listener);\r\n        } else {\r\n            this.image.addEventListener(type, listener);\r\n        }\r\n    }\r\n\r\n    removeEventListener (type: string, listener: any) {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        if (this.events.indexOf(type) !== -1) {\r\n            this.removeEventListener_(type, listener);\r\n        } else {\r\n            this.image.removeEventListener(type, listener);\r\n        }\r\n    }\r\n\r\n    setDuration (duration: number) {\r\n        this.duration = duration;\r\n    }\r\n\r\n    getDuration (): number {\r\n        return this.duration;\r\n    }\r\n\r\n    getCurrentTime (): number {\r\n        return this.currentTime;\r\n    }\r\n\r\n    setVolume (volume: number) {\r\n        // NA\r\n    }\r\n\r\n    getVolume () {\r\n        return 0;\r\n    }\r\n\r\n    play () {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        this.startTimer();\r\n    }\r\n\r\n    pause () {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        this.stopTimer();\r\n    }\r\n\r\n    stop () {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        this.stopTimer();\r\n    }\r\n\r\n    reset () {\r\n        if (!this.image) {\r\n            return;\r\n        }\r\n        this.image = null;\r\n        this.listeners = {};\r\n    }\r\n\r\n    isEnded () {\r\n        return this.ended;\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private getListeners (type) {\r\n        if (!(type in this.listeners)) {\r\n            this.listeners[type] = [];\r\n        }\r\n        return this.listeners[type];\r\n    }\r\n\r\n    private addEventListener_ (type: string, listener: any) {\r\n        let listeners = this.getListeners(type),\r\n            idx = listeners.indexOf(listener);\r\n\r\n        if (idx === -1) {\r\n            listeners.push(listener);\r\n        }\r\n    }\r\n\r\n    private removeEventListener_ (type: string, listener: any) {\r\n        let listeners = this.getListeners(type),\r\n            idx = listeners.indexOf(listener);\r\n\r\n        if (idx !== -1) {\r\n            listeners.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    private notifyEvent (type) {\r\n        let listeners = this.getListeners(type);\r\n\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            listeners[i].call(this);\r\n        }\r\n    }\r\n\r\n    private updateCurrentTime () {\r\n        let time = new Date().getTime();\r\n\r\n        this.currentTime += (time - this.timerTime) / 1000;\r\n        //this.logger.log('Image timeupdate, time = ' + this.currentTime);\r\n        this.notifyEvent('timeupdate');\r\n\r\n        if (this.currentTime >= this.duration) {\r\n            this.stopTimer();\r\n            this.ended = true;\r\n            this.notifyEvent('ended');\r\n        }\r\n\r\n        this.timerTime = time;\r\n    }\r\n\r\n    private startTimer () {\r\n        if (this.timerInterval !== null) {\r\n            return;\r\n        }\r\n        this.notifyEvent('play');\r\n        this.timerTime = new Date().getTime();\r\n        this.timerInterval = setInterval(this.updateCurrentTime.bind(this), 200);\r\n    }\r\n\r\n    private stopTimer () {\r\n        if (this.timerInterval === null) {\r\n            return;\r\n        }\r\n        this.notifyEvent('pause');\r\n        clearInterval(this.timerInterval);\r\n        this.timerInterval = null;\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------    \r\n}\r\n\r\nexport default ImagePlayer;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The VideoPlayer is a MediaPlayer implementation for playing video files.\r\n*/\r\n\r\nimport * as vast from '../vast/model/Vast'\r\nimport { MediaPlayer } from './MediaPlayer'\r\nimport { Logger } from '../Logger'\r\nimport { Utils } from '../utils/utils'\r\n\r\n\r\nexport class VideoPlayer implements MediaPlayer {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private uri: string;\r\n    private video: HTMLMediaElement;\r\n    private logger: Logger;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.uri = '';\r\n        this.video = null;\r\n        this.logger = Logger.getInstance();\r\n    }\r\n\r\n    load (baseUrl: string, mediaFiles: vast.MediaFile[]) {\r\n\r\n        // Get 'adsplayer-video' element if already declared in DOM\r\n        this.video = document.getElementById('adsplayer-video') as HTMLMediaElement;\r\n\r\n        if (!this.video) {\r\n            // Create the video element\r\n            this.video = document.createElement('video');\r\n            this.video.autoplay = false;\r\n            this.video.id = 'adsplayer-video';\r\n        }\r\n\r\n        // Check if input format is supported\r\n        if (!this.isMediaSupported(mediaFiles[0].type)) {\r\n            return false;\r\n        }\r\n\r\n        // Sort the mediafiles in bitrate ascending order\r\n        mediaFiles.sort(function(a, b) {\r\n            if (a.bitrate && b.bitrate) {\r\n                return a.bitrate - b.bitrate;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        // Play the media file with lowest bitrate\r\n        this.uri = mediaFiles[0].uri;\r\n\r\n        // Add base URL\r\n        this.uri = Utils.isAbsoluteURI(this.uri) ? this.uri : (baseUrl + this.uri);\r\n\r\n        this.logger.debug('Load video media, uri = ' + this.uri);\r\n\r\n        this.video.addEventListener('error', function(e) {\r\n            console.log(e);\r\n        });\r\n\r\n        this.video.src = this.uri;\r\n\r\n        return true;\r\n    }\r\n\r\n    getType () {\r\n        return 'video';\r\n    }\r\n\r\n    getElement () {\r\n        return this.video;\r\n    }\r\n\r\n    addEventListener (type: string, listener: any) {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.addEventListener(type, listener);\r\n    }\r\n\r\n    removeEventListener (type: string, listener: any) {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.removeEventListener(type, listener);\r\n    }\r\n\r\n    setDuration (duration: number) {\r\n        // duration is handled by the video element\r\n    }\r\n\r\n    getDuration (): number {\r\n        if (!this.video) {\r\n            return 0;\r\n        }\r\n        return this.video.duration;\r\n    }\r\n\r\n    getCurrentTime (): number {\r\n        if (!this.video) {\r\n            return 0;\r\n        }\r\n        return this.video.currentTime;\r\n    }\r\n\r\n    getVolume (): number {\r\n        if (!this.video) {\r\n            return 0;\r\n        }\r\n        return this.video.muted ? 0 : this.video.volume;\r\n    }\r\n\r\n    setVolume (volume: number) {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.volume = volume;\r\n    }\r\n\r\n    play () {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.play();\r\n    }\r\n\r\n    stop () {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.pause();\r\n        this.video.removeAttribute('src');\r\n        this.video.load();\r\n    }\r\n\r\n    pause () {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video.pause();\r\n    }\r\n\r\n    reset () {\r\n        if (!this.video) {\r\n            return;\r\n        }\r\n        this.video = null;\r\n    }\r\n\r\n    isEnded () {\r\n        return this.video.ended;\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------    \r\n\r\n    private isMediaSupported (mimeType) {\r\n        if (!this.video) {\r\n            throw 'isMediaSupported(): element not created';\r\n        }\r\n        if (!(this.video instanceof HTMLMediaElement)) {\r\n            throw 'isMediaSupported(): element must be of type HTMLMediaElement';\r\n        }\r\n\r\n        var canPlay = this.video.canPlayType(mimeType);\r\n        return (canPlay === 'probably' || canPlay === 'maybe');\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------    \r\n\r\n\r\n}\r\n\r\nexport default VideoPlayer;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The TrackingEventsManager manages the sending of the tracking events while a creative's media is playing.\r\n* It takes as input the list of tracking events to send.\r\n*/\r\n\r\nimport * as vast from './model/Vast'\r\nimport { Logger } from '../Logger';\r\n\r\nexport class TrackingEventsManager {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private trackingEvents: vast.TrackingEvent[];\r\n    private adMediaPlayer;\r\n    private currentTime: number;\r\n    private mute: boolean;\r\n    private unmute: boolean ;\r\n    private debug;\r\n    private eventListeners: any[];\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.trackingEvents = null;\r\n        this.adMediaPlayer = null;\r\n        this.currentTime = -1;\r\n        this.mute = false;\r\n        this.unmute = false;\r\n        this.debug = Logger.getInstance();\r\n        this.eventListeners = [];\r\n    }\r\n\r\n    /**\r\n     * Initializes the TrackingEventsManager.\r\n     * @method init\r\n     * @access public\r\n     * @memberof TrackingEventsManager#\r\n     * @param {Array} trackingEvents - the array of tracking events to manage\r\n     * @param {Object} adMediaPlayer - the ad media player\r\n     */\r\n    init (trackingEvents, adMediaPlayer) {\r\n        this.trackingEvents = trackingEvents;\r\n        this.adMediaPlayer = adMediaPlayer;\r\n        this.mute = (this.adMediaPlayer.getVolume() === 0);\r\n        this.unmute = (this.adMediaPlayer.getVolume() > 0);\r\n    }\r\n\r\n    start () {\r\n        if (this.trackingEvents.length === 0) {\r\n            return;\r\n        }\r\n        this.addPlayerEventListeners();\r\n    }\r\n\r\n    stop () {\r\n        this.removePlayerEventListeners();\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private postEvent (uri) {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('GET', uri, true);\r\n        xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n        xhr.send();\r\n    }\r\n\r\n    private addEventListener (element, eventType, trackingEvent: vast.TrackingEvent) {\r\n\r\n        let self = this,\r\n            _listener = function(/*event*/) {\r\n                if (this.completed) {\r\n                    return;\r\n                }\r\n                if (this.uri === undefined || this.uri.length === 0) {\r\n                    return;\r\n                }\r\n                if (this.condition && !this.condition()) {\r\n                    return;\r\n                }\r\n                self.debug.log('Send tracking event ' + this.event + ', uri = ' + this.uri);\r\n                self.postEvent(this.uri);\r\n                if (this.oneShot) {\r\n                    this.completed = true;\r\n                }\r\n            },\r\n            _eventListener = {\r\n                type: eventType,\r\n                element: element,\r\n                listener: _listener.bind(trackingEvent)\r\n            };\r\n\r\n        element.addEventListener(eventType, _eventListener.listener);\r\n        this.eventListeners.push(_eventListener);\r\n    }\r\n\r\n    private addPlayerEventListeners () {\r\n\r\n        for (let i = 0; i < this.trackingEvents.length; i++) {\r\n            let trackingEvent = this.trackingEvents[i];\r\n            if (trackingEvent.uri && trackingEvent.uri.length > 0) {\r\n                switch (trackingEvent.event) {\r\n                    case 'creativeView':\r\n                        trackingEvent.oneShot = true;\r\n                        this.addEventListener(this.adMediaPlayer, 'loadeddata', trackingEvent);\r\n                        break;\r\n                    case 'start':\r\n                        trackingEvent.oneShot = true;\r\n                        this.addEventListener(this.adMediaPlayer, 'playing', trackingEvent);\r\n                        break;\r\n                    case 'pause':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = () => {\r\n                            // To ignore pause event that may be raised at end of stream\r\n                            return (this.adMediaPlayer.isEnded() === false );\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'pause', trackingEvent);\r\n                        break;\r\n                    case 'resume':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = () => {\r\n                            return (this.adMediaPlayer.getCurrentTime() > 0);\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'play', trackingEvent);\r\n                        break;\r\n                    case 'firstQuartile':\r\n                        trackingEvent.oneShot = true;\r\n                        trackingEvent.condition = () => {\r\n                            //_debug.log('Progress: ' + (this.adMediaPlayer.getCurrentTime() / _adMediaPlayer.getDuration()));\r\n                            return ((this.adMediaPlayer.getCurrentTime() / this.adMediaPlayer.getDuration()) >= 0.25);\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'timeupdate', trackingEvent);\r\n                        break;\r\n                    case 'midpoint':\r\n                        trackingEvent.oneShot = true;\r\n                        trackingEvent.condition = () => {\r\n                            //_debug.log('Progress: ' + (this.adMediaPlayer.getCurrentTime() / _adMediaPlayer.getDuration()));\r\n                            return ((this.adMediaPlayer.getCurrentTime() / this.adMediaPlayer.getDuration()) >= 0.50);\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'timeupdate', trackingEvent);\r\n                        break;\r\n                    case 'thirdQuartile':\r\n                        trackingEvent.oneShot = true;\r\n                        trackingEvent.condition = () => {\r\n                            //_debug.log('Progress: ' + (this.adMediaPlayer.getCurrentTime() / _adMediaPlayer.getDuration()));\r\n                            return ((this.adMediaPlayer.getCurrentTime() / this.adMediaPlayer.getDuration()) >= 0.75);\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'timeupdate', trackingEvent);\r\n                        break;\r\n                    case 'rewind':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = () => {\r\n                            let res = ((this.adMediaPlayer.getCurrentTime() < this.currentTime) && (this.adMediaPlayer.isEnded() === false));\r\n                            this.currentTime = this.adMediaPlayer.getCurrentTime();\r\n                            return res;\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'timeupdate', trackingEvent);\r\n                        break;\r\n                    case 'complete':\r\n                        this.addEventListener(this.adMediaPlayer, 'ended', trackingEvent);\r\n                        break;\r\n                    case 'mute':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = () => {\r\n                            let res = !this.mute && (this.adMediaPlayer.getVolume() === 0);\r\n                            this.mute = (this.adMediaPlayer.getVolume() === 0);\r\n                            return res;\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'volumechange', trackingEvent);\r\n                        break;\r\n                    case 'unmute':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = () => {\r\n                            let res = !this.unmute && (this.adMediaPlayer.getVolume() > 0);\r\n                            this.unmute = (this.adMediaPlayer.getVolume() > 0);\r\n                            return res;\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'volumechange', trackingEvent);\r\n                        break;\r\n                    case 'fullscreen':\r\n                    case 'exitFullscreen':\r\n                        trackingEvent.oneShot = false;\r\n                        trackingEvent.condition = (event = trackingEvent.event) => {\r\n                            let state = (event === 'fullscreen');\r\n                            return (document['fullscreen'] === state || document['mozFullScreen'] === state || document['webkitIsFullScreen'] === state);\r\n                        };\r\n                        this.addEventListener(document, 'webkitfullscreenchange', trackingEvent);\r\n                        this.addEventListener(document, 'mozfullscreenchange', trackingEvent);\r\n                        this.addEventListener(document, 'MSFullscreenChange', trackingEvent);\r\n                        this.addEventListener(document, 'fullscreenChange', trackingEvent);\r\n                        break;\r\n                    case 'progress':\r\n                        trackingEvent.oneShot = true;\r\n                        trackingEvent.condition = () => {\r\n                            if (trackingEvent.offsetPercent) {\r\n                                //this.debug.log('progress:' + this.adMediaPlayer.getCurrentTime()+' vs offsetPercent = ' + trackingEvent.offsetPercent * this.adMediaPlayer.getDuration());\r\n                                return (this.adMediaPlayer.getCurrentTime() >= trackingEvent.offsetPercent * this.adMediaPlayer.getDuration());\r\n                            } else {\r\n                                //this.debug.log('progress:' + this.adMediaPlayer.getCurrentTime()+' vs offsetInSeconds ' + trackingEvent.offsetInSeconds);\r\n                                return (this.adMediaPlayer.getCurrentTime() >= trackingEvent.offsetInSeconds);\r\n                            }\r\n                        };\r\n                        this.addEventListener(this.adMediaPlayer, 'timeupdate', trackingEvent);\r\n                        break;\r\n                    case 'acceptInvitationLinear':\r\n                        trackingEvent.oneShot = false;\r\n                        this.addEventListener(this.adMediaPlayer, 'click', trackingEvent);\r\n                        break;\r\n                    case 'closeLinear':\r\n                        trackingEvent.oneShot = false;\r\n                        this.addEventListener(window, 'beforeunload', trackingEvent);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private removePlayerEventListeners () {\r\n        for (let i = 0; i < this.eventListeners.length; i++) {\r\n            this.eventListeners[i].element.removeEventListener(this.eventListeners[i].type, this.eventListeners[i].listener);\r\n        }\r\n        this.eventListeners = [];\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TrackingEventsManager;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The CreativePlayer manages:\r\n* - the playing of media files within a Creative (with the help of a Image/VideoPlayer)\r\n* - the tracking events (with the help of a TrackingEventsManager)\r\n* - the display of the ad skipping component\r\n* - the user clicks\r\n*/\r\n\r\nimport * as vast from './model/Vast';\r\nimport { TrackingEventsManager } from './TrackingEventsManager';\r\nimport { MediaPlayer } from '../media/MediaPlayer';\r\nimport { VideoPlayer } from '../media/VideoPlayer';\r\nimport { ImagePlayer } from '../media/ImagePlayer';\r\nimport { Logger } from '../Logger';\r\nimport { EventBus, AdEvents } from '../EventBus';\r\nimport { EventTypes } from '../../Events';\r\n\r\nexport class CreativePlayer {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private adPlayerContainer: HTMLElement;\r\n    private mediaPlayer: MediaPlayer;\r\n    private trackingEventsManager: TrackingEventsManager;\r\n    private mainVideo: HTMLMediaElement;\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n\r\n    private onMediaPlayListener;\r\n    private onMediaPauseListener;\r\n    private onMediaErrorListener;\r\n    private onMediaTimeupdateListener;\r\n    private onMediaEndedListener;\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.adPlayerContainer = null;\r\n        this.mediaPlayer = null;\r\n        this.trackingEventsManager = null;\r\n        this.mainVideo = null;\r\n        this.logger = Logger.getInstance();\r\n        this.eventBus = EventBus.getInstance();\r\n\r\n        this.onMediaPlayListener = this.onMediaPlay.bind(this);\r\n        this.onMediaPauseListener = this.onMediaPause.bind(this);\r\n        this.onMediaErrorListener = this.onMediaError.bind(this);\r\n        this.onMediaTimeupdateListener = this.onMediaTimeupdate.bind(this);\r\n        this.onMediaEndedListener = this.onMediaEnded.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initializes the creative player.\r\n     * @method init\r\n     * @access public\r\n     * @memberof CreativePlayer#\r\n     * @param {Object} creative - the creative element to play\r\n     * @param {Object} adPlayerContainer - the HTML DOM container for ads player components\r\n     * @param {Object} mainVideo - the HTML5 video element used by the main media player\r\n     * @param {string} baseUrl - the base URL for media files\r\n     */\r\n    init (creative: vast.Linear, adPlayerContainer: HTMLElement, mainVideo: HTMLMediaElement, baseUrl: string) {\r\n        this.adPlayerContainer = adPlayerContainer;\r\n        this.mainVideo = mainVideo;\r\n        return this.load(creative, baseUrl);\r\n    }\r\n\r\n    play () {\r\n        this.play_();\r\n    }\r\n\r\n    pause () {\r\n        this.pause_();\r\n    }\r\n\r\n    stop () {\r\n        this.stop_();\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private parseTime (str: string) {\r\n        var timeParts,\r\n            SECONDS_IN_HOUR = 60 * 60,\r\n            SECONDS_IN_MIN = 60;\r\n\r\n        if (!str) {\r\n            return -1;\r\n        }\r\n\r\n        timeParts = str.split(':');\r\n\r\n        // Check time format, must be HH:MM:SS(.mmm)\r\n        if (timeParts.length !== 3) {\r\n            return -1;\r\n        }\r\n\r\n        return  (parseInt(timeParts[0]) * SECONDS_IN_HOUR) +\r\n                (parseInt(timeParts[1]) * SECONDS_IN_MIN) +\r\n                (parseFloat(timeParts[2]));\r\n    }\r\n\r\n    private onMediaPlay () {\r\n        this.logger.debug('Creative media play');\r\n        // Notify the creative has ended\r\n        this.eventBus.dispatchEvent(AdEvents.PLAY);\r\n    }\r\n\r\n    private onMediaPause () {\r\n        this.logger.debug('Creative media pause');\r\n        // Notify the creative has ended\r\n        this.eventBus.dispatchEvent(AdEvents.PAUSE);\r\n    }\r\n\r\n    private onMediaError () {\r\n        this.logger.debug('Creative media error');\r\n        // Notify the creative has ended\r\n        this.eventBus.dispatchEvent(AdEvents.CREATIVE_END);\r\n    }\r\n\r\n    private onMediaEnded () {\r\n        this.logger.debug('creative media ended');\r\n        // Notify the creative has ended\r\n        this.eventBus.dispatchEvent(AdEvents.CREATIVE_END);\r\n    }\r\n\r\n    private onMediaTimeupdate () {\r\n        //this.logger.debug('Media timeupdate: ' + this.mediaPlayer.getCurrentTime());\r\n    }\r\n\r\n    private onMainVideoVolumeChange () {\r\n        if (!this.mediaPlayer) {\r\n            return;\r\n        }\r\n        this.mediaPlayer.setVolume(this.mainVideo.muted ? 0 : this.mainVideo.volume);\r\n    }\r\n\r\n    private onAdClick (creative: vast.Linear) {\r\n        // this = creative player\r\n        if (!creative.videoClicks) {\r\n            return;\r\n        }\r\n        this.logger.debug('Creative Click');\r\n        // ClickThrough : send an event for the application to open the web page\r\n        if (creative.videoClicks.clickThrough) {\r\n            this.logger.debug('Ad click, uri = ' + creative.videoClicks.clickThrough);\r\n            this.eventBus.dispatchEvent(AdEvents.CLICK, {\r\n                uri: creative.videoClicks.clickThrough\r\n            });\r\n        }\r\n\r\n        // TODO\r\n        // ClickTracking\r\n        // if (this.videoClicks.clickTracking) {\r\n        // }\r\n    }\r\n\r\n    private load (creative: vast.Linear, baseUrl: string) {\r\n        var mediaFile,\r\n            isVideo,\r\n            isImage;\r\n\r\n        if (!creative) {\r\n            return false;\r\n        }\r\n\r\n        if (creative.mediaFiles.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        mediaFile = creative.mediaFiles[0];\r\n\r\n        // Video or image media ?\r\n        isVideo = mediaFile.type.indexOf('video') !== -1;\r\n        isImage = mediaFile.type.indexOf('image') !== -1;\r\n\r\n        if (isVideo) {\r\n            this.mediaPlayer = new VideoPlayer();\r\n        }\r\n        else if (isImage) {\r\n            this.mediaPlayer = new ImagePlayer();\r\n        } else {\r\n            // Unknown/unsupported media type\r\n            return false;\r\n        }\r\n\r\n        // Load the media files\r\n        this.logger.debug('Creative load');\r\n        if (!this.mediaPlayer.load(baseUrl, creative.mediaFiles)) {\r\n            this.mediaPlayer = null;\r\n            return false;\r\n        }\r\n\r\n        this.mediaPlayer.setDuration(this.parseTime(creative.duration));\r\n        this.mediaPlayer.addEventListener('play', this.onMediaPlayListener);\r\n        this.mediaPlayer.addEventListener('pause', this.onMediaPauseListener);\r\n        this.mediaPlayer.addEventListener('error', this.onMediaErrorListener);\r\n        this.mediaPlayer.addEventListener('timeupdate', this.onMediaTimeupdateListener);\r\n        this.mediaPlayer.addEventListener('ended', this.onMediaEndedListener);\r\n\r\n        // Add tracking events\r\n        if (creative.trackingEvents) {\r\n            this.trackingEventsManager = new TrackingEventsManager();\r\n            this.trackingEventsManager.init(creative.trackingEvents, this.mediaPlayer);\r\n            this.trackingEventsManager.start();\r\n        }\r\n\r\n        // Notify a creative is starting to play\r\n        this.eventBus.dispatchEvent(AdEvents.CREATIVE_START);\r\n\r\n        // Notify a media element has been created and appended into document\r\n        this.eventBus.dispatchEvent(EventTypes.ADD_ELEMENT, {\r\n            element: this.mediaPlayer.getElement(),\r\n            type: this.mediaPlayer.getType()\r\n        });\r\n\r\n        // Add the media player DOM element\r\n        this.adPlayerContainer.appendChild(this.mediaPlayer.getElement());\r\n\r\n        // Listener for click\r\n        if (creative.videoClicks) {\r\n            if (creative.videoClicks.clickThrough) {\r\n                this.mediaPlayer.getElement().style.cursor = 'pointer';\r\n            }\r\n            this.mediaPlayer.getElement().addEventListener('click', this.onAdClick.bind(this, creative));\r\n        }\r\n\r\n        // Align media volume to main video volume, add 'volumechange' listener\r\n        this.onMainVideoVolumeChange();\r\n        this.mainVideo.addEventListener('volumechange', this.onMainVideoVolumeChange.bind(this));\r\n\r\n        // Start playing the media\r\n        this.play();\r\n\r\n        return true;\r\n    }\r\n\r\n    private play_ () {\r\n\r\n        if (!this.mediaPlayer) {\r\n            return;\r\n        }\r\n\r\n        this.logger.debug('Creative play');\r\n\r\n        // Play the media player\r\n        this.mediaPlayer.play();\r\n    }\r\n\r\n    private pause_ () {\r\n\r\n        if (!this.mediaPlayer) {\r\n            return;\r\n        }\r\n\r\n        this.logger.debug('Creative pause');\r\n\r\n        // Pause the media player\r\n        this.mediaPlayer.pause();\r\n    }\r\n\r\n    private stop_ () {\r\n\r\n        if (!this.mediaPlayer) {\r\n            return;\r\n        }\r\n\r\n        this.logger.debug('Creative stop');\r\n\r\n        // Stop listening for 'volumechange' event\r\n        this.mainVideo.removeEventListener('volumechange', this.onMainVideoVolumeChange);\r\n        this.mainVideo = null;\r\n\r\n        // Stop the media player\r\n        this.mediaPlayer.removeEventListener('play', this.onMediaPlayListener);\r\n        this.mediaPlayer.removeEventListener('pause', this.onMediaPauseListener);\r\n        this.mediaPlayer.removeEventListener('error', this.onMediaErrorListener);\r\n        this.mediaPlayer.removeEventListener('timeupdate', this.onMediaTimeupdateListener);\r\n        this.mediaPlayer.removeEventListener('ended', this.onMediaEndedListener);\r\n        this.mediaPlayer.stop();\r\n\r\n        // Notify a media element has been removed from DOM\r\n        this.eventBus.dispatchEvent(EventTypes.REMOVE_ELEMENT, {\r\n            element: this.mediaPlayer.getElement(),\r\n            type: this.mediaPlayer.getType()\r\n        });\r\n\r\n        // Remove the element from the DOM\r\n        this.adPlayerContainer.removeChild(this.mediaPlayer.getElement());\r\n\r\n        // Stop the TrackingEvents manager\r\n        if (this.trackingEventsManager) {\r\n            this.trackingEventsManager.stop();\r\n            this.trackingEventsManager = null;\r\n        }\r\n\r\n        // Reset the media player\r\n        this.mediaPlayer.reset();\r\n        this.mediaPlayer = null;\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The AdPlayer manages the sequencing of playing creatives of a single Ad.\r\n* It takes as input the Ad object as returned by the VAST parser.\r\n* The AdPlayer plays sequentially all contained Creatives,\r\n* with the help of a CreativePlayer.\r\n*\r\n* Dispatch events:\r\n*  - 'adStart' when when the playback of the ad (first creative) is starting.\r\n*  - 'adEnd' when the playback of the (all creatives) has ended\r\n*/\r\n\r\nimport * as vast from './model/Vast';\r\nimport { CreativePlayer } from './CreativePlayer';\r\nimport { Logger } from '../Logger';\r\nimport { EventBus, AdEvents } from '../EventBus';\r\n\r\nexport class AdPlayer {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private ad: vast.Ad;\r\n    private adPlayerContainer: HTMLElement;\r\n    private mainVideo: HTMLMediaElement;\r\n    private baseUrl: string;\r\n    private creativeIndex: number;\r\n    private creativePlayer: CreativePlayer;\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n\r\n    private onCreativeEndListener;\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    /**\r\n     * Initializes the AdPlayer\r\n     * @method constructor\r\n     * @access public\r\n     * @memberof AdPlayer#\r\n     */\r\n\r\n    constructor () {\r\n        this.ad = null;\r\n        this.adPlayerContainer = null;\r\n        this.mainVideo = null;\r\n        this.baseUrl = '';\r\n        this.creativeIndex = -1;\r\n        this.creativePlayer = null;\r\n        this.logger = Logger.getInstance();\r\n        this.eventBus = EventBus.getInstance();\r\n\r\n        this.onCreativeEndListener = this.onCreativeEnd.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initializes the AdManager.\r\n     * @method init\r\n     * @access public\r\n     * @memberof VastPlayerManager#\r\n     * @param {Object} ad - the Ad to play\r\n     * @param {Array} adPlayerContainer - the HTML DOM container for ads player components\r\n     * @param {Object} mainVideo - the HTML5 video element used by the main media player\r\n     * @param {string} baseUrl - the base URL for media files\r\n     */\r\n    init (ad: vast.Ad, adPlayerContainer: HTMLElement, mainVideo: HTMLMediaElement, baseUrl: string) {\r\n        this.ad = ad;\r\n        this.adPlayerContainer = adPlayerContainer;\r\n        this.mainVideo = mainVideo;\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    start () {\r\n        // Notify an Ad is starting to play\r\n        this.eventBus.dispatchEvent(AdEvents.AD_START);\r\n\r\n        // Send Impressions tracking\r\n        this.sendImpressions(this.ad.inLine.impressions);\r\n\r\n        // Play first Creative\r\n        this.playCreative(0);\r\n    }\r\n\r\n    play () {\r\n        this.resumeCreative();\r\n    }\r\n\r\n    pause () {\r\n        this.pauseCreative();\r\n    }\r\n\r\n    stop () {\r\n        this.stopCreative();\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private sendImpressions (impressions: vast.Impression[]) {\r\n        let impression;\r\n\r\n        if (impressions.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < impressions.length; i++) {\r\n            impression = impressions[i];\r\n            if (impression.uri && impression.uri.length > 0) {\r\n                this.logger.debug('Send Impression, uri = ' + impression.uri);\r\n                let http = new XMLHttpRequest();\r\n                http.open('GET', impression.uri, true);\r\n                http.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n                http.send();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onCreativeEnd () {\r\n\r\n        this.logger.debug('Creative ended');\r\n\r\n        // Stop the current creative media\r\n        this.stopCreative();\r\n\r\n        // Play next creative\r\n        this.playNextCreative();\r\n    }\r\n\r\n    private pauseCreative () {\r\n        if (!this.creativePlayer) {\r\n            return;\r\n        }\r\n        this.creativePlayer.pause();\r\n    }\r\n\r\n    private resumeCreative () {\r\n        if (!this.creativePlayer) {\r\n            return;\r\n        }\r\n        this.creativePlayer.play();\r\n    }\r\n\r\n    private stopCreative () {\r\n        if (!this.creativePlayer) {\r\n            return;\r\n        }\r\n        this.eventBus.removeEventListener('creativeEnd', this.onCreativeEndListener);\r\n        this.creativePlayer.stop();\r\n        this.creativePlayer = null;\r\n    }\r\n\r\n    private playCreative (index: number) {\r\n        var creative = this.ad.inLine.creatives[index],\r\n            linear;\r\n\r\n        this.creativeIndex = index;\r\n        this.logger.debug('Play Creative - index = ' + this.creativeIndex);\r\n\r\n        // Play Linear element\r\n        linear = creative.linear;\r\n\r\n        if (linear) {\r\n            this.logger.debug('Play Linear Ad, duration = ' + linear.duration);\r\n            this.eventBus.addEventListener(AdEvents.CREATIVE_END, this.onCreativeEndListener);\r\n            this.creativePlayer = new CreativePlayer();\r\n            if (!this.creativePlayer.init(creative.linear, this.adPlayerContainer, this.mainVideo, this.baseUrl)) {\r\n                this.playNextCreative();\r\n            }\r\n        } else {\r\n            this.playNextCreative();\r\n        }\r\n    }\r\n\r\n    private playNextCreative () {\r\n\r\n        this.creativeIndex++;\r\n\r\n        if (this.creativeIndex < this.ad.inLine.creatives.length) {\r\n            this.playCreative(this.creativeIndex);\r\n        } else {\r\n            // Notify end of Ad\r\n            this.eventBus.dispatchEvent(AdEvents.AD_END);\r\n        }\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n}\r\n\r\nexport default AdPlayer;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The VastPlayerManager manages the sequencing of playing ads of a single VAST.\r\n* It takes as input the list of Vast objects as returned by the VAST parser.\r\n* For each Vast, the VastPlayerManager plays sequentially all contained Ads,\r\n* with the help of an AdPlayer.\r\n*/\r\n\r\nimport * as vast from './model/Vast';\r\nimport { AdPlayer } from './AdPlayer';\r\nimport { Logger } from '../Logger';\r\nimport { EventBus, AdEvents } from '../EventBus';\r\n\r\nexport class VastPlayerManager {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private vasts: vast.Vast[];\r\n    private adPlayerContainer: HTMLElement;\r\n    private mainVideo: HTMLMediaElement;\r\n    private vastIndex: number;\r\n    private adIndex: number;\r\n    private adPlayer: AdPlayer;\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n\r\n    private onAdEndListener;\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor () {\r\n        this.vasts = [];\r\n        this.adPlayerContainer = null;\r\n        this.mainVideo = null;\r\n        this.vastIndex = -1;\r\n        this.adIndex = -1;\r\n        this.adPlayer = null;\r\n        this.logger = Logger.getInstance();\r\n        this.eventBus = EventBus.getInstance();\r\n        this.onAdEndListener = this.onAdEnd.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initializes the VastPlayerManager.\r\n     * @method init\r\n     * @access public\r\n     * @memberof VastPlayerManager#\r\n     * @param {Array} vasts - the array of Vast components to play\r\n     * @param {Array} adPlayerContainer - the HTML DOM container for ads player components\r\n     */\r\n    init (vasts: vast.Vast[], adPlayerContainer: HTMLElement, mainVideo: HTMLMediaElement) {\r\n        this.vasts = vasts;\r\n        this.adPlayerContainer = adPlayerContainer;\r\n        this.mainVideo = mainVideo;\r\n    }\r\n\r\n    start () {\r\n        if (!this.vasts || this.vasts.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Notify a trigger is starting to play\r\n        this.eventBus.dispatchEvent(AdEvents.TRIGGER_START);\r\n\r\n        this.playVast(0);\r\n    }\r\n\r\n    play () {\r\n        this.resumeAd();\r\n    }\r\n\r\n    pause () {\r\n        this.pauseAd();\r\n    }\r\n\r\n    stop () {\r\n        this.stopAd();\r\n    }\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private onAdEnd () {\r\n\r\n        this.logger.debug('Ad ended');\r\n\r\n        // Stop the current Ad\r\n        this.stopAd();\r\n\r\n        // Play next Ad\r\n        this.playNextAd();\r\n    }\r\n\r\n    private pauseAd () {\r\n        if (!this.adPlayer) {\r\n            return;\r\n        }\r\n        this.adPlayer.pause();\r\n    }\r\n\r\n    private resumeAd () {\r\n        if (!this.adPlayer) {\r\n            return;\r\n        }\r\n        this.adPlayer.play();\r\n    }\r\n\r\n    private stopAd () {\r\n        if (!this.adPlayer) {\r\n            return;\r\n        }\r\n        this.eventBus.removeEventListener('adEnd', this.onAdEndListener);\r\n        this.adPlayer.stop();\r\n        this.adPlayer = null;\r\n    }\r\n\r\n    private playAd (index: number) {\r\n        let vast = this.vasts[this.vastIndex],\r\n            ad = vast.ads[index];\r\n\r\n        this.adIndex = index;\r\n        this.logger.debug('Play Ad - index = ' + this.adIndex);\r\n\r\n        this.eventBus.addEventListener(AdEvents.AD_END, this.onAdEndListener);\r\n        this.adPlayer = new AdPlayer();\r\n        this.adPlayer.init(ad, this.adPlayerContainer, this.mainVideo, vast.baseUrl);\r\n        this.adPlayer.start();\r\n    }\r\n\r\n    private playNextAd () {\r\n        let vast = this.vasts[this.vastIndex];\r\n\r\n        this.adIndex++;\r\n\r\n        if (this.adIndex < vast.ads.length) {\r\n            this.playAd(this.adIndex);\r\n        } else {\r\n            this.playNextVast();\r\n        }\r\n    }\r\n\r\n    private playVast (index: number) {\r\n        let vast = this.vasts[index];\r\n\r\n        if (vast.ads.length === 0) {\r\n            // Empty VAST\r\n            return;\r\n        }\r\n\r\n        this.vastIndex = index;\r\n        this.logger.debug('Play Vast - index = ' + this.vastIndex);\r\n\r\n        // Play first Ad\r\n        this.playAd(0);\r\n    }\r\n\r\n    private playNextVast () {\r\n\r\n        this.vastIndex++;\r\n\r\n        if (this.vastIndex < this.vasts.length) {\r\n            this.playVast(this.vastIndex);\r\n        } else {\r\n            // Notify end of trigger\r\n            this.eventBus.dispatchEvent(AdEvents.TRIGGER_END);\r\n        }\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------    \r\n}\r\n\r\nexport default VastPlayerManager;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* @class Vast\r\n* @ignore\r\n*/\r\nexport class Vast {\r\n    version: string = '';\r\n    ads: Ad[] = [];\r\n    baseUrl: string = '';\r\n}\r\n\r\n/**\r\n* @class Ad\r\n* @ignore\r\n*/\r\nexport class Ad {\r\n    id: string = '';        // [Optional] an ad server-defined string for the ad\r\n    sequence: number = 0;   // [Optional] the sequence in which an ad should play\r\n    inLine: InLine = null;\r\n    wrapper = null;\r\n}\r\n\r\n/**\r\n* @class InLine\r\n* @ignore\r\n*/\r\nexport class InLine {\r\n    adSystem: string = '';          // [Required] Source ad server\r\n    adTitle: string = '';           // [Required] Title\r\n    description: string = '';       // [Optional] Description\r\n    survey: string = '';            // [Optional] URI of request to survey vendor\r\n    error: string = '';             // [Optional] URI to request if ad does not play due to error\r\n    impressions: Impression[] = []; // [Required] URIs to track impressions.\r\n    creatives: Creative[] = [];     // [Required] Creative elements\r\n    extensions: Extensions[] = [];  // [Optional] Any valid XML may be included in the Extensions node\r\n}\r\n\r\n/**\r\n* @class Impression\r\n* @ignore\r\n*/\r\nexport class Impression {\r\n    uri: string = '';   // [Required] URI to track Impression\r\n    id: string = '';    // [Optional] Identifier\r\n}\r\n\r\n/**\r\n* @class Extensions\r\n* @ignore\r\n*/\r\nexport class Extensions {\r\n    uri: string = '';   //\r\n    other: string = ''; //\r\n}\r\n\r\n/**\r\n* @class Creative\r\n* @ignore\r\n*/\r\nexport class Creative {\r\n    id: string = '';                // [Optional] Identifier\r\n    adId: string = '';              // [Optional] Ad-ID for the creative (formerly ISCI)\r\n    sequence: number = 0;           // [Optional] The preferred order in which multiple Creatives should be displayed\r\n    linear: Linear = null;          // [Optional] Linear ad\r\n    CompanionAds: Companion[] = []; // [Optional] Companion ads\r\n    nonLinearAds: NonLinear[] = []; // [Optional] Non-linear ads\r\n}\r\n\r\n// Creative types\r\nexport enum CREATIVE_TYPE {\r\n    LINEAR = 'linear',\r\n    NON_LINEAR_ADS = 'NonLinearAds',\r\n    COMPANION_ADS = 'CompanionAds'\r\n};\r\n\r\n/**\r\n* @class Linear\r\n* @ignore\r\n*/\r\nexport class Linear {\r\n    duration: string = '';                  // [Required] Duration in standard time format, hh:mm:ss\r\n    trackingEvents: TrackingEvent[] = [];   // [Optional] Tracking events elements\r\n    adParameters: string = '';              // [Optional] Data to be passed into the video ad\r\n    videoClicks: VideoClicks = null;        // [Optional] Video clicks\r\n    mediaFiles = [];                        // [Required] Media file elements\r\n}\r\n\r\n/**\r\n* @class Companion\r\n* @ignore\r\n*/\r\nexport class Companion {\r\n    id: string = '';                        // optional : identifier\r\n    width: number = 0;                      // width pixel dimension of companion\r\n    height: number = 0;                     // height pixel dimension of companion\r\n    staticResource: StaticResource = null;  // optional : pointer to the static resource : AdsPlayer.vast.model.Ad.StaticResource\r\n    iFrameResource: string = '';            // optional : URI source for an IFrame to display the companion element\r\n    hTMLResource: string = '';              // optional : HTML to display the companion element : shall be CDATA value\r\n    trackingEvents: TrackingEvent[] = [];   // optional : pointer to any number of tracking objects : AdsPlayer.vast.model.Ad.CompanionTracking\r\n    clickThrough: string = '';              // optional : URI to open as destination page when user clicks on the companion\r\n    altText: string = '';                   // optional : alt text to be displayed when companion is rendered in HTML environment.\r\n    adParameters: string = '';              // optional : data to be passed into the companion ads\r\n}\r\n\r\n//\r\n//      Non Linear Ads\r\n//\r\n\r\n/**\r\n* @class Companion\r\n* @ignore\r\n*/\r\nexport class NonLinear {\r\n    id: string = '';                        // optional : identifier\r\n    width: number = 0;                      // width pixel dimension of non linear\r\n    height: number = 0;                     // height pixel dimension of non linear\r\n    expandedWidth: number = 0;              // optional : pixel dimensions of expanding nonlinear ad when in expanded state\r\n    expandedHeight : number = 0;            // optional : pixel dimensions of expanding nonlinear ad when in expanded state\r\n    scalable: boolean = true;               // optional : whether it is acceptable to scale the image\r\n    maintainAspectRatio: boolean = true;    // optional : whether the ad must have its aspect ratio maintained when scaled\r\n    apiFramework: string = '';              // optional : defines the method to use for communication with the nonlinear element\r\n    staticResource: StaticResource = null;  // optional : pointer to the static resource : AdsPlayer.vast.model.Ad.StaticResource\r\n    hTMLResource: string = '';              // optional : HTML to display the companion element : shall be CDATA value\r\n    trackingEvents: TrackingEvent[] = [];   // optional : pointer to any number of tracking objects : AdsPlayer.vast.model.Ad.Tracking\r\n    clickThrough: string = '';              // optional : URI to open as destination page when user clicks on the non-linear ad unit\r\n    adParameters: string = '';              // optional : data to be passed into the video ad\r\n}\r\n\r\n/**\r\n* @class TrackingEvent\r\n* @ignore\r\n*/\r\nexport class TrackingEvent {\r\n    uri: string = '';               // [Optional] URI to track various events during playback\r\n    event: string = '';             // [Required] The name of the event to track for the Linear element\r\n    offsetInSeconds: number = 0;    // [Optional] Required in 'Progess' event, not use with other events\r\n    offsetPercent: number = 0;      // [Optional] Required in 'Progess' event, not use with other events\r\n    condition: Function;            // Used by TrackingEventsManager\r\n    oneShot: boolean = true;        // Used by TrackingEventsManager\r\n    completed: boolean = true;      // Used by TrackingEventsManager\r\n}\r\n\r\n\r\n/**\r\n* [TrackingEvent description]\r\n* @type {Object}\r\n*/\r\nexport enum TRACKINGEVENT_TYPE {\r\n    CREATIVEVIEW = 'creativeView',\r\n    START = 'start',\r\n    MIDPOINT = 'midpoint',\r\n    FIRSTQUARTILE = 'firstQuartile',\r\n    THIRDQUARTILE = 'thirdQuartile',\r\n    COMPLETE = 'complete',\r\n    MUTE = 'mute',\r\n    UNMUTE = 'unmute',\r\n    PAUSE = 'pause',\r\n    REWIND = 'rewind',\r\n    RESUME = 'resume',\r\n    FULLSCREEN = 'fullscreen',\r\n    EXPAND = 'expand',\r\n    COLLAPSE = 'collapse',\r\n    ACCEPTINVITATION = 'acceptInvitation',\r\n    CLOSE = 'close'\r\n};\r\n\r\n/**\r\n* @class VideoClicks\r\n* @ignore\r\n*/\r\nexport class VideoClicks {\r\n    clickThrough: string = '';          // [Optional] URI to open as destination page when user clicks on the video\r\n    clickTracking: string = '';         // [Optional] URI to request for tracking purposes when user clicks on the video\r\n    customClick: string = '';           // [Optional] URI to request on custom events such as hotspotted video\r\n}\r\n\r\n/**\r\n* @class MediaFile\r\n* @ignore\r\n*/\r\nexport class MediaFile {\r\n    id: string = '';                    // [Optional] Identifier\r\n    delivery: string = '';              // [Required] Method of delivery of ad ('streaming' or 'progressive')\r\n    type: string = '';                  // [Required] MIME type\r\n    bitrate: number = 0;                // [Optional] Bitrate of encoded video in Kbps\r\n    width: number = 0;                  // [Required] Pixel dimensions of video\r\n    height: number = 0;                 // [Required] Pixel dimensions of video\r\n    scalable: boolean = true;           // [Optional] Whether it is acceptable to scale the image.\r\n    maintainAspectRatio: boolean = true;// [Optional] Whether the ad must have its aspect ratio maintained when scaled\r\n    apiFramework: string = '';          // [Optional] Defines the method to use for communication if the MediaFile is interactive.\r\n    uri: string = '';\r\n}\r\n\r\n// MediaFile delivery types\r\nexport enum MEIAFILE_DELIVERY {\r\n    STREAMING = 'streaming',\r\n    PROGRESSIVE = 'progressive '\r\n};\r\n\r\n/**\r\n* @class StaticResource\r\n* @ignore\r\n*/\r\nexport class StaticResource {\r\n    uRI: string = '';   // optional : URI to a static file, such as an image or SWF file\r\n    creativeType  ='';  // mime type of static resource\r\n}\r\n\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* VAST parser. This class parses VAST file in XML format\r\n* and construct the corresponding VAST object according to VAST data model.\r\n*/\r\n\r\nimport * as vast from './model/Vast';\r\nimport { XmlDom } from '../utils/xmldom';\r\n\r\nexport class VastParser {\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n    * Parses the VAST XML DOM and get the triggers.\r\n    * @param {object} xmlDom - the XML DOM to parse\r\n    */\r\n    parse (xmlDom: Document) {\r\n        let vast_: vast.Vast  = new vast.Vast(),\r\n            vastNode = XmlDom.getElement(xmlDom, 'VAST');\r\n\r\n        if (vastNode === null) {\r\n            return vast_;\r\n        }\r\n\r\n        vast_.version = vastNode.getAttribute('version');\r\n\r\n        this.getAds(vastNode, vast_);\r\n\r\n        return vast_;\r\n    }\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------    \r\n    \r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private getTrackingEvent (trackingNode): vast.TrackingEvent {\r\n        let trackingEvent: vast.TrackingEvent = new vast.TrackingEvent();\r\n\r\n        trackingEvent.event = trackingNode.getAttribute('event');\r\n        trackingEvent.uri = XmlDom.getNodeTextValue(trackingNode);\r\n        if (trackingEvent.event == 'progress') {\r\n            let offsetValue = trackingNode.getAttribute('offset');\r\n            if (offsetValue.indexOf('%') == -1) {\r\n                /* convert HH:MM:SS ( or HH:MM:SS.mmm) in seconds */\r\n                trackingEvent.offsetInSeconds = new Date('1970-01-01T' + offsetValue + 'Z').getTime() / 1000;\r\n            }\r\n            else {\r\n                trackingEvent.offsetPercent = offsetValue.substring(0, offsetValue.indexOf('%')) / 100;\r\n            }\r\n        }\r\n        return trackingEvent;\r\n    }\r\n\r\n    private getVideoClicks (videoClicksNode): vast.VideoClicks {\r\n        let videoClicks: vast.VideoClicks = new vast.VideoClicks(),\r\n            nodeName,\r\n            nodeValue;\r\n\r\n        for (let i = 0; i < videoClicksNode.childNodes.length; i++) {\r\n            nodeName = videoClicksNode.childNodes[i].nodeName;\r\n            nodeValue = XmlDom.getNodeTextValue(videoClicksNode.childNodes[i]);\r\n\r\n            switch (nodeName) {\r\n                case 'ClickThrough':\r\n                    videoClicks.clickThrough = nodeValue;\r\n                    break;\r\n                case 'ClickTracking':\r\n                    videoClicks.clickTracking = nodeValue;\r\n                    break;\r\n                case 'CustomClick':\r\n                    videoClicks.customClick = nodeValue;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return videoClicks;\r\n    }\r\n\r\n    private getMediaFile (mediaFileNode): vast.MediaFile {\r\n        let mediaFile: vast.MediaFile = new vast.MediaFile();\r\n\r\n        mediaFile.id = mediaFileNode.getAttribute('id');\r\n        mediaFile.delivery = mediaFileNode.getAttribute('delivery');\r\n        mediaFile.type = mediaFileNode.getAttribute('type');\r\n        mediaFile.bitrate = mediaFileNode.getAttribute('bitrate');\r\n        mediaFile.width = mediaFileNode.getAttribute('width');\r\n        mediaFile.height = mediaFileNode.getAttribute('height');\r\n        mediaFile.scalable = mediaFileNode.getAttribute('scalable');\r\n        mediaFile.maintainAspectRatio = mediaFileNode.getAttribute('maintainAspectRatio');\r\n        mediaFile.apiFramework = mediaFileNode.getAttribute('apiFramework');\r\n        mediaFile.uri = XmlDom.getNodeTextValue(mediaFileNode);\r\n\r\n        return mediaFile;\r\n    }\r\n\r\n    private getLinear (linearNode): vast.Linear {\r\n        let linear: vast.Linear = new vast.Linear(),\r\n            trackingNodes,\r\n            videoClicksNode,\r\n            mediaFileNodes;\r\n\r\n        linear.duration = XmlDom.getChildNodeTextValue(linearNode, 'Duration');\r\n        linear.adParameters = XmlDom.getChildNodeTextValue(linearNode, 'AdParameters');\r\n\r\n        trackingNodes = XmlDom.getSubElements(linearNode, 'TrackingEvents', 'Tracking');\r\n        for (let i = 0; i < trackingNodes.length; i++) {\r\n            linear.trackingEvents.push(this.getTrackingEvent(trackingNodes[i]));\r\n        }\r\n\r\n        videoClicksNode = XmlDom.getElement(linearNode, 'VideoClicks');\r\n        if (videoClicksNode) {\r\n            linear.videoClicks = this.getVideoClicks(videoClicksNode);\r\n        }\r\n\r\n        mediaFileNodes = XmlDom.getSubElements(linearNode, 'MediaFiles', 'MediaFile');\r\n        for (let i = 0; i < mediaFileNodes.length; i++) {\r\n            linear.mediaFiles.push(this.getMediaFile(mediaFileNodes[i]));\r\n        }\r\n\r\n        return linear;\r\n    }\r\n\r\n    private getCreative (creativeNode): vast.Creative {\r\n        let creative: vast.Creative = new vast.Creative(),\r\n            linearNode;\r\n\r\n        creative.id = creativeNode.getAttribute('id');\r\n        creative.adId = creativeNode.getAttribute('AdID');\r\n        creative.sequence = creativeNode.getAttribute('sequence');\r\n\r\n        linearNode = XmlDom.getElement(creativeNode, 'Linear');\r\n        if (linearNode) {\r\n            creative.linear = this.getLinear(linearNode);\r\n        }\r\n\r\n        // TODO: get Companion and non-Linear elements\r\n\r\n        return creative;\r\n    }\r\n\r\n    private getInLine (adNode): vast.InLine {\r\n        let inLine: vast.InLine = new vast.InLine(),\r\n            inLineNode = XmlDom.getElement(adNode, 'InLine'),\r\n            impressionNodes,\r\n            creativeNodes;\r\n\r\n        if (inLineNode === null) {\r\n            return null;\r\n        }\r\n\r\n        inLine.adSystem = XmlDom.getChildNodeTextValue(inLineNode, 'AdSystem');\r\n        inLine.adTitle = XmlDom.getChildNodeTextValue(inLineNode, 'AdTitle');\r\n        inLine.description = XmlDom.getChildNodeTextValue(inLineNode, 'Description');\r\n        inLine.survey = XmlDom.getChildNodeTextValue(inLineNode, 'Survey');\r\n        inLine.error = XmlDom.getChildNodeTextValue(inLineNode, 'Error');\r\n\r\n        impressionNodes = XmlDom.getElements(inLineNode, 'Impression');\r\n        for (let i = 0; i < impressionNodes.length; i++) {\r\n            let impression = new vast.Impression();\r\n            impression.id = impressionNodes[i].getAttribute('id');\r\n            impression.uri = XmlDom.getNodeTextValue(impressionNodes[i]);\r\n            inLine.impressions.push(impression);\r\n\r\n        }\r\n\r\n        creativeNodes = XmlDom.getSubElements(inLineNode, 'Creatives', 'Creative');\r\n        for (let i = 0; i < creativeNodes.length; i++) {\r\n            inLine.creatives.push(this.getCreative(creativeNodes[i]));\r\n        }\r\n\r\n        return inLine;\r\n    }\r\n\r\n    private getAd (adNode): vast.Ad {\r\n        let ad: vast.Ad = new vast.Ad();\r\n        ad.id = adNode.getAttribute('id');\r\n        ad.sequence = adNode.getAttribute('sequence');\r\n        ad.inLine = this.getInLine(adNode);\r\n        return ad;\r\n    }\r\n\r\n    private getAds (vastNode, vast_: vast.Vast) {\r\n        let adNodes = XmlDom.getElements(vastNode, 'Ad');\r\n        for (let i = 0; i < adNodes.length; i++) {\r\n            vast_.ads.push(this.getAd(adNodes[i]));\r\n        }\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------  \r\n}\r\n\r\nexport default VastParser;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* The TriggerManager manages the detection of the start and end of a trigger.\r\n* It takes as input a trigger object (as parsed from a MAST file) and tests the start and end conditions\r\n* to detect the activation and revocation of a trigger.\r\n*/\r\n\r\nimport * as mast from './model/Mast';\r\n\r\nexport class TriggerManager {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    trigger: mast.Trigger;\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.trigger = null;\r\n    }\r\n\r\n    /**\r\n     * Initializes the TriggerManager.\r\n     * @method init\r\n     * @access public\r\n     * @memberof TriggerManager#\r\n     * @param {Trigger} trigger - the trigger to handle by this manager\r\n     */\r\n    init (trigger: mast.Trigger) {\r\n        this.trigger = trigger;\r\n    }\r\n\r\n    /**\r\n     * Returns the trigger object managed by this TriggerManager.\r\n     * @method init\r\n     * @access public\r\n     * @memberof TriggerManager#\r\n     * @return {Object} the managed trigger object\r\n     */\r\n    getTrigger (): mast.Trigger {\r\n        return this.trigger;\r\n    }\r\n\r\n    /**\r\n     * Evaluates the trigger start conditions.\r\n     * @method checkStartConditions\r\n     * @access public\r\n     * @memberof TriggerManager#\r\n     * @param {Number} video - the main video element\r\n     */\r\n    checkStartConditions (video: HTMLMediaElement) {\r\n        if (this.trigger.activated) {\r\n            return false;\r\n        }\r\n        return this.evaluateConditions(this.trigger.startConditions, video);\r\n    }\r\n\r\n    /**\r\n     * Evaluates the trigger end conditions.\r\n     * @method checkEndConditions\r\n     * @access public\r\n     * @memberof TriggerManager#\r\n     * @param {Number} video - the main video element\r\n     */\r\n    checkEndConditions (video: HTMLMediaElement) {\r\n        return this.evaluateConditions(this.trigger.endConditions, video);\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private parseTime (str: string): number {\r\n        let timeParts,\r\n            SECONDS_IN_HOUR = 60 * 60,\r\n            SECONDS_IN_MIN = 60;\r\n\r\n        if (!str) {\r\n            return -1;\r\n        }\r\n\r\n        timeParts = str.split(':');\r\n\r\n        // Check time format, must be HH:MM:SS(.mmm)\r\n        if (timeParts.length !== 3) {\r\n            return -1;\r\n        }\r\n\r\n        return  (parseInt(timeParts[0]) * SECONDS_IN_HOUR) +\r\n                (parseInt(timeParts[1]) * SECONDS_IN_MIN) +\r\n                (parseFloat(timeParts[2]));\r\n    }\r\n\r\n    private compareValues (value1: number, value2: number, operator: string): boolean {\r\n\r\n        if (value1 < 0 || value2 < 0) {\r\n            return false;\r\n        }\r\n\r\n        let res: boolean = false;\r\n        switch (operator) {\r\n            case mast.CONDITION_OPERATOR.EQ:\r\n                res = (value1 === value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.NEQ:\r\n                res = (value1 !== value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.GTR:\r\n                res = (value1 > value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.GEQ:\r\n                res = (value1 >= value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.LT:\r\n                res = (value1 < value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.LEQ:\r\n                res = (value1 <= value2);\r\n                break;\r\n            case mast.CONDITION_OPERATOR.MOD:\r\n                res = ((value1 % value2) === 0);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private evaluateCondition (condition: mast.Condition, video: HTMLMediaElement): boolean {\r\n        let res: boolean = false;\r\n\r\n        // Check pre-roll condition for activation\r\n        if (video.currentTime === 0 && condition.type === mast.CONDITION_TYPE.EVENT && condition.name === mast.CONDITION_NAME.ON_ITEM_START) {\r\n            res = true;\r\n        }\r\n\r\n        // Check mid-roll condition for activation\r\n        if (condition.type === mast.CONDITION_TYPE.PROPERTY) {\r\n            switch (condition.name) {\r\n                case mast.CONDITION_NAME.POSITION:\r\n                    res = this.compareValues(video.currentTime, this.parseTime(condition.value), condition.operator);\r\n                    break;\r\n                case mast.CONDITION_NAME.DURATION:\r\n                    res = this.compareValues(video.duration, this.parseTime(condition.value), condition.operator);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Check condition for revocation\r\n        if (video.ended && condition.type === mast.CONDITION_TYPE.EVENT && condition.name === mast.CONDITION_NAME.ON_ITEM_END) {\r\n            res = true;\r\n        }\r\n\r\n        // AND with sub-conditions\r\n        // MAST spec. : \"Child conditions are treated as an implicit AND, all children of a condition must evaluate true before a trigger will fire (or be revoked) from that condition.\"\r\n        for (let i = 0; i < condition.conditions.length; i++) {\r\n            res = res && this.evaluateCondition(condition.conditions[i], video);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    private evaluateConditions (conditions, video: HTMLMediaElement): boolean {\r\n        let res: boolean = false;\r\n\r\n        // Evaluate each condition\r\n        // MAST spec. : \"Multiple condition elements are treated as an implicit OR, any one of them evaluating true will fire the trigger.\"\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            res = res || this.evaluateCondition(conditions[i], video);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n}\r\n\r\nexport default TriggerManager;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* MAST parser. This class parses MAST file in XML format\r\n* and construct the corresponding MAST object according to MAST data model.\r\n*/\r\n\r\nimport * as mast from './model/Mast';\r\nimport { XmlDom } from '../utils/xmldom';\r\n\r\n\r\nexport class MastParser {\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n    * Parses the MAST xml file and get the triggers.\r\n    * @param {object} xmlDom - the XML DOM to parse\r\n    */\r\n    parse (xmlDom: Document) {\r\n        let _mast: mast.Mast = new mast.Mast(),\r\n            mastNode = XmlDom.getElement(xmlDom, 'MAST');\r\n\r\n        if (mastNode === null) {\r\n            return _mast;\r\n        }\r\n\r\n        this.getTriggers(mastNode, _mast);\r\n\r\n        return _mast;\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------    \r\n\r\n\r\n    getCondition (conditionNode): mast.Condition {\r\n        let condition: mast.Condition = new mast.Condition(),\r\n            conditionNodes;\r\n\r\n        condition.type = conditionNode.getAttribute('type');\r\n        condition.name = conditionNode.getAttribute('name');\r\n        condition.value = conditionNode.getAttribute('value');\r\n        condition.operator = conditionNode.getAttribute('operator');\r\n        conditionNodes = conditionNode.getElementsByTagName('condition');\r\n        for (let i = 0; i < conditionNodes.length; i++) {\r\n            condition.conditions.push(this.getCondition(conditionNodes[i]));\r\n        }\r\n\r\n        return condition;\r\n    }\r\n\r\n    getSource (sourceNode): mast.Source {\r\n        let source: mast.Source = new mast.Source(),\r\n            sourceNodes;\r\n\r\n        source.uri = sourceNode.getAttribute('uri');\r\n        source.altReference = sourceNode.getAttribute('altReference');\r\n        source.format = sourceNode.getAttribute('format');\r\n        sourceNodes = sourceNode.getElementsByTagName('source');\r\n        for (let i = 0; i < sourceNodes.length; i++) {\r\n            source.sources.push(this.getSource(sourceNodes[i]));\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    getTrigger (triggerNode): mast.Trigger {\r\n        let trigger: mast.Trigger = new mast.Trigger(),\r\n            startConditionNodes = XmlDom.getSubElements(triggerNode, 'startConditions', 'condition'),\r\n            endConditionNodes = XmlDom.getSubElements(triggerNode, 'endConditions', 'condition'),\r\n            sourceNodes = XmlDom.getSubElements(triggerNode, 'sources', 'source');\r\n\r\n        trigger.id = triggerNode.getAttribute('id');\r\n        trigger.description = triggerNode.getAttribute('description');\r\n\r\n        for (let i = 0; i < startConditionNodes.length; i++) {\r\n            trigger.startConditions.push(this.getCondition(startConditionNodes[i]));\r\n        }\r\n\r\n        for (let i = 0; i < endConditionNodes.length; i++) {\r\n            trigger.endConditions.push(this.getCondition(endConditionNodes[i]));\r\n        }\r\n\r\n        for (let i = 0; i < sourceNodes.length; i++) {\r\n            trigger.sources.push(this.getSource(sourceNodes[i]));\r\n        }\r\n\r\n        return trigger;\r\n    }\r\n\r\n    getTriggers (mastNode, mast: mast.Mast) {\r\n        let triggerNodes = XmlDom.getSubElements(mastNode, 'triggers', 'trigger');\r\n\r\n        for (let i = 0; i < triggerNodes.length; i++) {\r\n            mast.triggers.push(this.getTrigger(triggerNodes[i]));\r\n        }\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n}\r\n\r\n\r\nexport default MastParser;","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* Errors and warning notifications handler.\r\n*/\r\n\r\nimport { Logger } from './Logger';\r\nimport { EventBus } from './EventBus';\r\nimport { ErrorCodes, ErrorMessages } from '../Errors';\r\nimport { EventTypes } from '../Events';\r\n\r\nexport class ErrorHandler {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private static instance: ErrorHandler = null;\r\n\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    static getInstance() {\r\n        if (this.instance === null) {\r\n            this.instance = new ErrorHandler();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor () {\r\n        this.logger = Logger.getInstance();\r\n        this.eventBus = EventBus.getInstance();\r\n    }\r\n\r\n    sendError (code: ErrorCodes, data: object) {\r\n        let message = ErrorMessages[code];\r\n        this.logger.error('[Error] Code: ' + code + ', Message: ' + message + ', Data: ' + JSON.stringify(data, null, '\\t'));\r\n        this.eventBus.dispatchEvent(EventTypes.ERROR, {\r\n            code: code,\r\n            message: message,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    // #endregion PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* File downloader utility class.\r\n*/\r\n\r\nimport { ErrorCodes } from '../Errors';\r\n\r\nexport class FileLoader {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private request: XMLHttpRequest;\r\n    private url: string;\r\n    private baseUrl: string;\r\n    private aborted: boolean;\r\n    private needFailureReport: boolean;\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor() {\r\n        this.request = null;\r\n        this.url = '';\r\n        this.baseUrl = '';\r\n        this.aborted = false;\r\n        this.needFailureReport = true;\r\n    }\r\n\r\n    load (url): Promise<object> {\r\n        return new Promise((resolve, reject) => {\r\n            this.load_(url, resolve, reject);\r\n        });\r\n    }\r\n\r\n    abort () {\r\n        this.abort_();\r\n    }\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private parseBaseUrl (url: string) {\r\n        let base = null;\r\n        if (url.indexOf('/') !== -1) {\r\n            if (url.indexOf('?') !== -1) {\r\n                url = url.substring(0, url.indexOf('?'));\r\n            }\r\n            base = url.substring(0, url.lastIndexOf('/') + 1);\r\n        }\r\n        return base;\r\n    }\r\n\r\n    private parseXml (data: string) {\r\n        if (!DOMParser) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            let parser = new DOMParser();\r\n\r\n            let xmlDoc = parser.parseFromString(data, 'text/xml');\r\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\r\n                throw new Error('Error parsing XML');\r\n            }\r\n            return xmlDoc;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private load_ (url: string, resolve: any, reject: any) {\r\n        this.url = url;\r\n        this.baseUrl = this.parseBaseUrl(url);\r\n        this.request = new XMLHttpRequest();\r\n\r\n        this.request.onload = evt => {\r\n            this.onLoad(resolve, reject);\r\n        };\r\n        this.request.onloadend = evt => {\r\n            this.onLoadend(resolve, reject);\r\n        };\r\n        this.request.onerror = evt => {\r\n            this.onLoadend(resolve, reject);\r\n        };\r\n        this.request.onabort = evt => {\r\n            this.onAbort();\r\n        };\r\n\r\n        this.request.open('GET', url, true);\r\n        this.request.timeout = 10000;\r\n        this.request.send();\r\n    }\r\n\r\n    private onAbort () {\r\n        this.aborted = true;\r\n    }\r\n\r\n    private onLoad (resolve: any, reject: any) {\r\n        if (this.request.status < 200 || this.request.status > 299) {\r\n            return;\r\n        }\r\n\r\n        if (this.request.status === 200 && this.request.readyState === 4) {\r\n            // Parse responseText in case of wrong response Content-Type\r\n            let xmlDoc: Document = this.request.responseXML || this.parseXml(this.request.responseText);\r\n\r\n            // Check if response is in XML format.\r\n            if (xmlDoc === null) {\r\n                this.needFailureReport = true;\r\n                return;\r\n            }\r\n\r\n            // Get the redirection URL and use it as base URL\r\n            if (this.request.responseURL) {\r\n                this.baseUrl = this.parseBaseUrl(this.request.responseURL);\r\n            }\r\n\r\n            this.needFailureReport = false;\r\n\r\n            // Return XML DOM (as input to parsers)\r\n            resolve({\r\n                dom: xmlDoc,\r\n                baseUrl: this.baseUrl\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    private onLoadend (resolve: any, reject: any) {\r\n        if (!this.needFailureReport) {\r\n            return;\r\n        }\r\n        this.needFailureReport = false;\r\n\r\n        if (this.aborted) {\r\n            // Request has been aborted => reject without error\r\n            reject();\r\n        } else if (this.request.status < 200 || this.request.status > 299) {\r\n            // Request has failed => reject with error\r\n            reject({\r\n                name: ErrorCodes.DOWNLOAD_ERR_FILE,\r\n                data: {\r\n                    url: this.url,\r\n                    status: this.request.status\r\n                }\r\n            });\r\n        } else if (this.request.responseXML === null) {\r\n            // Response was not in XML format => reject with error\r\n            reject({\r\n                name: ErrorCodes.DOWNLOAD_ERR_NOT_XML,\r\n                data: {\r\n                    url: this.url\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private abort_ () {\r\n        if (this.request !== null &&\r\n            this.request.readyState > 0 &&\r\n            this.request.readyState < 4) {\r\n            this.request.abort();\r\n        }\r\n    }\r\n\r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n/**\r\n* AdsPlayerController is th main controller class for AdsPlayer module.\r\n* It is in charge of downloading the MAST/VAST files and orchestrates the\r\n* detection of triggers and playing of ad(s).\r\n*/\r\n\r\nimport { Mast, Trigger } from './mast/model/Mast'\r\nimport { Logger } from './Logger';\r\nimport { FileLoader } from './FileLoader';\r\nimport { ErrorHandler } from './ErrorHandler';\r\nimport { EventBus, AdEvents } from './EventBus';\r\nimport { MastParser } from './mast/MastParser';\r\nimport { TriggerManager } from './mast/TriggerManager';\r\nimport { VastParser } from './vast/VastParser';\r\nimport { VastPlayerManager } from './vast/VastPlayerManager';\r\nimport { Utils } from './utils/utils';\r\nimport { EventTypes } from '../Events';\r\n\r\n\r\nexport class AdsPlayerController {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private adsPlayerContainer: HTMLElement;\r\n    private mainVideo: HTMLMediaElement;\r\n    private mast: Mast;\r\n    private fileLoaders: FileLoader[];\r\n    private triggerManagers: TriggerManager[];\r\n    private vastPlayerManager: VastPlayerManager;\r\n    private mastParser: MastParser;\r\n    private vastParser: VastParser;\r\n\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n    private errorHandler: ErrorHandler;\r\n\r\n    private handleMainPlayerPlayback: boolean;\r\n    private onVideoPlayingListener;\r\n    private onVideoTimeupdateListener;\r\n    private onVideoEndedListener;\r\n    private onTriggerEndListener;\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor () {\r\n\r\n        this.mainVideo = null;\r\n        this.adsPlayerContainer = null;\r\n        this.mast = null;\r\n        this.fileLoaders = [];\r\n        this.triggerManagers = [];\r\n        this.vastPlayerManager = null;\r\n        this.mastParser = new MastParser();\r\n        this.vastParser = new VastParser();\r\n        this.errorHandler = ErrorHandler.getInstance();\r\n        this.logger = Logger.getInstance();\r\n        this.eventBus = EventBus.getInstance();\r\n\r\n        this.handleMainPlayerPlayback = true;\r\n\r\n        this.onVideoPlayingListener = this.onVideoPlaying.bind(this);\r\n        this.onVideoTimeupdateListener = this.onVideoTimeupdate.bind(this);\r\n        this.onVideoEndedListener = this.onVideoEnded.bind(this);\r\n        this.onTriggerEndListener = this.onTriggerEnd.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initialize the Ads Player Controller.\r\n     * @method init\r\n     * @access public\r\n     * @memberof AdsPlayerController#\r\n     * @param {Object} video - the HTML5 video element used by the main media player\r\n     * @param {Object} adsPlayerContainer - The container to create the HTML5 video/image elements used to play and render the ads media\r\n     */\r\n    init (video: HTMLMediaElement, adsPlayerContainer: HTMLElement, handleMainPlayerPlayback: boolean = false) {\r\n        this.mainVideo = video;\r\n        this.adsPlayerContainer = adsPlayerContainer;\r\n        this.handleMainPlayerPlayback = handleMainPlayerPlayback;\r\n\r\n        // Add <video> event listener\r\n        this.mainVideo.addEventListener('playing', this.onVideoPlayingListener);\r\n        this.mainVideo.addEventListener('timeupdate', this.onVideoTimeupdateListener);\r\n        this.mainVideo.addEventListener('seeking', this.onVideoTimeupdateListener);\r\n        this.mainVideo.addEventListener('ended', this.onVideoEndedListener);\r\n\r\n        // Add trigger end event listener\r\n        this.eventBus.addEventListener(AdEvents.TRIGGER_END, this.onTriggerEndListener);\r\n    }\r\n\r\n\r\n    /**\r\n     * Load/open a MAST file.\r\n     * @method load\r\n     * @access public\r\n     * @memberof AdsPlayerController#\r\n     * @param {string} mastUrl - the MAST file url\r\n     */\r\n    load (url: string) {\r\n        let fileLoader = new FileLoader();\r\n\r\n        // Reset the MAST and trigger managers\r\n        this.mast = null;\r\n        this.triggerManagers = [];\r\n\r\n        // Download and parse MAST file\r\n        this.logger.debug('Download MAST file: ' + url);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fileLoader.load(url).then(result => {\r\n                this.logger.debug('Parse MAST file');\r\n                this.parseMastFile(result['dom'], result['baseUrl']);\r\n                // Start managing triggers and ads playing\r\n                resolve(this.start());\r\n            }).catch(error => {\r\n                if (error) {\r\n                    this.errorHandler.sendError(error.name, error.data);\r\n                    reject(error);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            });\r\n            this.fileLoaders.push(fileLoader);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stops and resets the Ads player.\r\n     * @method reset\r\n     * @access public\r\n     * @memberof AdsPlayerController#\r\n     */\r\n    stop () {\r\n        this.logger.debug('Stop');\r\n\r\n        // Stop/abort the file loaders\r\n        for (let i = 0; i < this.fileLoaders.length; i++) {\r\n            this.fileLoaders[i].abort();\r\n        }\r\n        this.fileLoaders = [];\r\n\r\n        // Stop the VAST player manager\r\n        if (this.vastPlayerManager) {\r\n            this.vastPlayerManager.stop();\r\n            this.vastPlayerManager = null;\r\n\r\n            // Notifies the application ad(s) playback has ended\r\n            // this.eventBus.dispatchEvent(EventTypes.END);\r\n        }\r\n    }\r\n\r\n    reset () {\r\n        this.logger.debug('Reset');\r\n\r\n        this.stop();\r\n\r\n        // Reset the trigger managers\r\n        this.triggerManagers = [];\r\n\r\n        // Reset the MAST\r\n        this.mast = null;\r\n    }\r\n\r\n    destroy () {\r\n        this.logger.debug('Destroy');\r\n\r\n        this.reset();\r\n\r\n        // Remove <video> event listener\r\n        this.mainVideo.removeEventListener('playing', this.onVideoPlayingListener);\r\n        this.mainVideo.removeEventListener('timeupdate', this.onVideoTimeupdateListener);\r\n        this.mainVideo.removeEventListener('seeking', this.onVideoTimeupdateListener);\r\n        this.mainVideo.removeEventListener('ended', this.onVideoEndedListener);\r\n\r\n        // Remove trigger end event listener\r\n        this.eventBus.removeEventListener('triggerEnd', this.onTriggerEndListener);\r\n    }\r\n\r\n    /**\r\n     * Plays/resumes the playback of the current ad.\r\n     * @method reset\r\n     * @access public\r\n     * @memberof AdsPlayerController#\r\n     */\r\n    play () {\r\n        this.logger.debug('Play');\r\n\r\n        // Start the VAST player manager\r\n        if (this.vastPlayerManager) {\r\n            this.vastPlayerManager.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pauses the playback of the current ad.\r\n     * @method reset\r\n     * @access public\r\n     * @memberof AdsPlayerController#\r\n     */\r\n    pause () {\r\n        this.logger.debug('Pause');\r\n\r\n        // Pause the VAST player manager\r\n        if (this.vastPlayerManager) {\r\n            this.vastPlayerManager.pause();\r\n        }\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private loadVast (url: string) {\r\n        let fileLoader = new FileLoader(),\r\n            vast = null;\r\n\r\n        return new Promise((resolve/*, reject*/) => {\r\n            this.logger.debug('Download VAST file: ' + url);\r\n            fileLoader.load(url).then(result => {\r\n                    this.logger.debug('Parse VAST file');\r\n                    vast = this.vastParser.parse(result['dom']);\r\n                    vast.baseUrl = result['baseUrl'];\r\n                    resolve(vast);\r\n                }).catch(error => {\r\n                    if (error) {\r\n                        this.errorHandler.sendError(error.name, error.data);\r\n                    }\r\n                    resolve(null);\r\n                }\r\n            );\r\n            this.fileLoaders.push(fileLoader);\r\n        });\r\n    }\r\n\r\n    private loadTriggerVasts (trigger: Trigger) {\r\n        let loadVastPromises = [];\r\n\r\n        for (let i = 0; i < trigger.sources.length; i++) {\r\n            let uri = trigger.sources[i].uri;\r\n            // Check for relative uri path and add base url if needed\r\n            uri = Utils.isAbsoluteURI(uri) ? uri : (this.mast.baseUrl + uri);\r\n            loadVastPromises.push(this.loadVast(uri));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all(loadVastPromises).then(vasts => {\r\n                // Push vast objects in the trigger in the original order\r\n                // (this = promises returned objects)\r\n                for (let i = 0; i < vasts.length; i++) {\r\n                    if (vasts[i] && vasts[i].ads && vasts[i].ads.length > 0) {\r\n                        trigger.vasts.push(vasts[i]);\r\n                    }\r\n                }\r\n                resolve();\r\n            }).catch(() => {\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    private parseMastFile (mastContent: Document, mastBaseUrl: string) {\r\n        let triggerManager;\r\n\r\n        // Parse the MAST file\r\n        this.mast = this.mastParser.parse(mastContent);\r\n\r\n        if (!this.mast) {\r\n            return;\r\n        }\r\n\r\n        // Store base URL for subsequent VATS files download\r\n        this.mast.baseUrl = mastBaseUrl;\r\n\r\n        // Initialize the trigger managers\r\n        for (let i = 0; i < this.mast.triggers.length; i++) {\r\n            triggerManager = new TriggerManager();\r\n            triggerManager.init(this.mast.triggers[i]);\r\n            this.triggerManagers.push(triggerManager);\r\n        }\r\n    }\r\n\r\n    private onVideoPlaying () {\r\n        if (this.handleMainPlayerPlayback && this.vastPlayerManager) {\r\n            this.logger.debug('Pause main video');\r\n            this.mainVideo.pause();\r\n        }\r\n    }\r\n\r\n    private onVideoTimeupdate () {\r\n        // Check for mid-roll triggers\r\n        let trigger = this.checkTriggersStart();\r\n        if (trigger !== null) {\r\n            this.activateTrigger(trigger, true);\r\n        }\r\n    }\r\n\r\n    private onVideoEnded () {\r\n        // Check for end-roll triggers\r\n        let trigger = this.checkTriggersStart();\r\n        if (trigger !== null) {\r\n            this.activateTrigger(trigger, true);\r\n        }\r\n\r\n        this.checkTriggersEnd();\r\n    }\r\n\r\n    private pauseVideo () {\r\n        if (this.handleMainPlayerPlayback && this.mainVideo && !this.mainVideo.paused) {\r\n            this.logger.debug('Pause main video');\r\n            this.mainVideo.pause();\r\n        }\r\n    }\r\n\r\n    private resumeVideo () {\r\n        if (this.handleMainPlayerPlayback && this.mainVideo && this.mainVideo.paused) {\r\n            this.logger.debug('Resume main video');\r\n            this.mainVideo.play();\r\n        }\r\n    }\r\n\r\n    private onTriggerEnd () {\r\n        this.logger.debug('End playing trigger');\r\n\r\n        // Delete VAST player manager\r\n        if (this.vastPlayerManager) {\r\n            this.vastPlayerManager = null;\r\n        }\r\n\r\n        // Check if another trigger has to be activated\r\n        let trigger = this.checkTriggersStart();\r\n        if (trigger !== null) {\r\n            this.activateTrigger(trigger, false);\r\n        } else {\r\n            // Notifies the application ad(s) playback has ended\r\n            this.eventBus.dispatchEvent(EventTypes.END);\r\n\r\n            if (!this.mainVideo.ended) {\r\n                // Resume the main video element\r\n                this.resumeVideo();\r\n            }\r\n        }\r\n    }\r\n\r\n    private playTrigger (trigger) {\r\n        if (trigger.vasts.length === 0) {\r\n            this.onTriggerEnd();\r\n            return;\r\n        }\r\n\r\n        // Pause the main video element\r\n        this.pauseVideo();\r\n\r\n        // Play the trigger\r\n        this.logger.debug('Start playing trigger ' + trigger.id);\r\n        this.vastPlayerManager = new VastPlayerManager();\r\n        this.vastPlayerManager.init(trigger.vasts, this.adsPlayerContainer, this.mainVideo);\r\n        this.vastPlayerManager.start();\r\n    }\r\n\r\n    private activateTrigger (trigger: Trigger, firstTrigger: boolean) {\r\n\r\n        // Check if a trigger is not already activated\r\n        if (this.vastPlayerManager) {\r\n            return;\r\n        }\r\n\r\n        if (firstTrigger) {\r\n            // Notifies the application ad(s) playback starts\r\n            this.eventBus.dispatchEvent(EventTypes.START, {\r\n                currentTime: this.mainVideo.currentTime,\r\n                ended: this.mainVideo.ended\r\n            });\r\n        }\r\n\r\n        this.logger.debug('Activate trigger ' + trigger.id);\r\n\r\n        trigger.activated = true;\r\n\r\n        if (trigger.vasts.length === 0) {\r\n            // Download VAST files\r\n            this.loadTriggerVasts(trigger).then(() => {\r\n                this.playTrigger(trigger);\r\n            });\r\n        } else {\r\n            this.playTrigger(trigger);\r\n        }\r\n    }\r\n\r\n    private checkTriggersStart () {\r\n        for (let i = 0; i < this.triggerManagers.length; i++) {\r\n            if (this.triggerManagers[i].checkStartConditions(this.mainVideo)) {\r\n                return this.triggerManagers[i].getTrigger();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private checkTriggersEnd () {\r\n        for (let i = 0; i < this.triggerManagers.length; i++) {\r\n            if (this.triggerManagers[i].checkEndConditions(this.mainVideo)) {\r\n                // Remove trigger manager => will not be activated anymore\r\n                this.triggerManagers.splice(0, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    private start () {\r\n        if (!this.mast) {\r\n            return;\r\n        }\r\n\r\n        this.logger.debug('Start');\r\n\r\n        if (this.mast.triggers.length === 0) {\r\n            this.logger.warn('No trigger in MAST');\r\n        }\r\n\r\n        // Check for pre-roll trigger\r\n        let trigger = this.checkTriggersStart();\r\n        if (trigger !== null) {\r\n            this.activateTrigger(trigger, true);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n\r\nexport default AdsPlayerController;\r\n","/*\r\n* The copyright in this software module is being made available under the BSD License, included\r\n* below. This software module may be subject to other third party and/or contributor rights,\r\n* including patent rights, and no such rights are granted under this license.\r\n*\r\n* Copyright (c) 2016, Orange\r\n* All rights reserved.\r\n*\r\n* Redistribution and use in source and binary forms, with or without modification, are permitted\r\n* provided that the following conditions are met:\r\n* - Redistributions of source code must retain the above copyright notice, this list of conditions\r\n*   and the following disclaimer.\r\n* - Redistributions in binary form must reproduce the above copyright notice, this list of\r\n*   conditions and the following disclaimer in the documentation and/or other materials provided\r\n*   with the distribution.\r\n* - Neither the name of Orange nor the names of its contributors may be used to endorse or promote\r\n*   products derived from this software module without specific prior written permission.\r\n*\r\n*\r\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR\r\n* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER O\r\n* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\n* WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nimport { AdsPlayerController } from './lib/AdsPlayerController';\r\nimport { EventBus } from './lib/EventBus';\r\nimport { Logger } from './lib/Logger';\r\nimport { EventTypes } from './Events';\r\n\r\nconst NAME = 'AdsPlayer';\r\ndeclare const __VERSION__: string;\r\nconst VERSION = __VERSION__;\r\ndeclare const __BUILDDATE__: string;\r\nconst BUILDDATE = __BUILDDATE__;\r\n\r\nexport class AdsPlayer {\r\n\r\n    // #region MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    private adsPlayerController: AdsPlayerController;\r\n    private logger: Logger;\r\n    private eventBus: EventBus;\r\n\r\n    private error;\r\n    private onErrorListener;\r\n\r\n\r\n    // #endregion MEMBERS\r\n    // --------------------------------------------------\r\n\r\n    // #region PUBLIC FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    constructor () {\r\n        this.adsPlayerController = null;\r\n        this.eventBus = EventBus.getInstance();\r\n        this.logger = Logger.getInstance();\r\n\r\n        this.error = null;\r\n        this.onErrorListener = this.onError.bind(this);\r\n    }\r\n\r\n    /**\r\n    * Returns the plugin name.\r\n    * @return {string} the plugin name\r\n    */\r\n    getName (): string {\r\n        return NAME;\r\n    }\r\n\r\n    /**\r\n    * Initializes the plugin.\r\n    * @param {HTMLMediaElement} video - the main video player\r\n    * @param {HTMLElement} adsPlayerContainer - the HTML element that will contains ad media element\r\n    * @param {boolean} handleMainPlayerPlayback - true (by default) if AdsPlayer shall handle the main video playback state\r\n    */\r\n    init (video: HTMLMediaElement, adsPlayerContainer: HTMLElement, handleMainPlayerPlayback: boolean = true) {\r\n        this.adsPlayerController = new AdsPlayerController();\r\n        this.adsPlayerController.init(video, adsPlayerContainer, handleMainPlayerPlayback);\r\n        this.eventBus.addEventListener(EventTypes.ERROR, this.onErrorListener);\r\n    }\r\n\r\n    /**\r\n    * This method is invoked when a new stream is to be loaded/opened.\r\n    * @param {object} stream - the stream contaning all stream informations (url, protData, adsUrl)\r\n    */\r\n    load (stream: object) {\r\n        return new Promise((resolve, reject) => {\r\n            if (stream.hasOwnProperty('adsUrl')) {\r\n                this.adsPlayerController.load(stream['adsUrl']).then(function (res) {\r\n                    resolve(res);\r\n                }).catch(function (e) {\r\n                    reject(e);\r\n                });\r\n            } else {\r\n                resolve(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * This method is invoked when the current stream is to be stopped.\r\n    */\r\n    stop () {\r\n        this.adsPlayerController.stop();\r\n    }\r\n\r\n    /**\r\n    * This method is invoked when the player is to be reset.\r\n    */\r\n    reset () {\r\n        this.adsPlayerController.reset();\r\n    }\r\n\r\n    /**\r\n    * This method is invoked when this plugin is being removed/destroyed.\r\n    */\r\n    destroy () {\r\n        this.adsPlayerController.destroy();\r\n        this.eventBus.removeEventListener(EventTypes.ERROR, this.onErrorListener);\r\n    }\r\n\r\n    /**\r\n    * Returns the plugin version.\r\n    * @return {string} the plugin version\r\n    */\r\n    getVersion (): string {\r\n        return VERSION;\r\n    }\r\n\r\n    /**\r\n    * Returns the full plugin version, including git revision\r\n    * @return {string} the full plugin version, including git revision\r\n    */\r\n    getVersionFull (): string {\r\n        return VERSION;\r\n    }\r\n\r\n    /**\r\n    * Returns the build date.\r\n    * @return {string} the build date\r\n    */\r\n    getBuildDate (): string {\r\n        return BUILDDATE;\r\n    }\r\n\r\n    /**\r\n    * Plays/resumes the playback of the current ad.\r\n    */\r\n    play () {\r\n        this.adsPlayerController.play();\r\n    }\r\n\r\n    /**\r\n    * Pauses the playback of the current ad.\r\n    */\r\n    pause () {\r\n        this.adsPlayerController.pause();\r\n    }\r\n\r\n    /**\r\n    * Registers a listener on the specified event. See {@link Event} for the syntax of the events\r\n    * and {@link EventTypes} for the types of event that can be raised.\r\n    * @param {string} type - the event type for listen to\r\n    * @param {callback} listener - the callback which is called when an event of the specified type occurs\r\n    */\r\n    addEventListener (type: string, listener: any) {\r\n        this.eventBus.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n    * Unregisters the listener previously registered with the addEventListener() method.\r\n    * @param {string} type - the event type on which the listener was registered\r\n    * @param {callback} listener - the callback which was registered to the event type\r\n    */\r\n    removeEventListener (type: string, listener: any) {\r\n        this.eventBus.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n    * Returns the Error object for the most recent error.\r\n    * @return {object} the Error object for the most recent error, or null if there has not been an error\r\n    */\r\n    getError () {\r\n        return this.error;\r\n    }\r\n\r\n    /**\r\n    * Enables or disables log messages.\r\n    * @return {boolean} enable - true to enable log messages, false otherwise\r\n    */\r\n    enableLogs (enable) {\r\n        this.logger.setLevel(enable? 4 : 0);\r\n    }\r\n\r\n    // #region PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n\r\n    private onError (e) {\r\n        this.error = e.data;\r\n    }\r\n    \r\n    // #endregion PRIVATE FUNCTIONS\r\n    // --------------------------------------------------\r\n}\r\n","export { AdsPlayer } from './src/AdsPlayer';\r\nexport { Event, EventTypes } from './src/Events';\r\nexport { ErrorCodes } from './src/Errors';\r\n"],"sourceRoot":""}